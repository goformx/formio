{"version":3,"file":"index.js","sources":["../src/templates/goforms/builder/index.ts","../src/templates/goforms/builder/form.ts","../src/templates/goforms/builderComponent/index.ts","../src/templates/goforms/builderComponent/form.ts","../src/templates/goforms/builderComponents/index.ts","../src/templates/goforms/builderComponents/form.ts","../src/templates/goforms/builderEditForm/index.ts","../src/templates/goforms/builderEditForm/form.ts","../src/templates/goforms/builderPlaceholder/index.ts","../src/templates/goforms/builderPlaceholder/form.ts","../src/templates/goforms/builderSidebar/index.ts","../src/templates/goforms/builderSidebar/form.ts","../src/templates/goforms/builderSidebarGroup/index.ts","../src/templates/goforms/builderSidebarGroup/form.ts","../src/templates/goforms/builderWizard/index.ts","../src/templates/goforms/builderWizard/form.ts","../src/templates/goforms/button/index.ts","../src/templates/goforms/button/form.ts","../src/templates/goforms/button/html.ts","../src/templates/goforms/checkbox/index.ts","../src/templates/goforms/checkbox/form.ts","../src/templates/goforms/checkbox/html.ts","../src/templates/goforms/columns/index.ts","../src/templates/goforms/columns/form.ts","../src/templates/goforms/component/index.ts","../src/templates/goforms/component/form.ts","../src/templates/goforms/cssClasses.ts","../src/templates/goforms/datagrid/index.ts","../src/templates/goforms/datagrid/form.ts","../src/templates/goforms/datagrid/html.ts","../src/templates/goforms/day/index.ts","../src/templates/goforms/day/form.ts","../src/templates/goforms/editgrid/index.ts","../src/templates/goforms/editgrid/form.ts","../src/templates/goforms/editgrid/html.ts","../src/templates/goforms/field/index.ts","../src/templates/goforms/field/form.ts","../src/templates/goforms/field/align.ts","../src/templates/goforms/fieldset/index.ts","../src/templates/goforms/fieldset/form.ts","../src/templates/goforms/file/index.ts","../src/templates/goforms/file/form.ts","../src/templates/goforms/file/html.ts","../src/templates/goforms/icon/index.ts","../src/templates/goforms/icon/form.ts","../src/templates/goforms/iconClass.ts","../src/templates/goforms/input/index.ts","../src/templates/goforms/input/form.ts","../src/templates/goforms/input/html.ts","../src/templates/goforms/label/index.ts","../src/templates/goforms/label/form.ts","../src/templates/goforms/loader/form.ts","../src/templates/goforms/loader/index.ts","../src/templates/goforms/loading/form.ts","../src/templates/goforms/loading/index.ts","../src/templates/goforms/message/index.ts","../src/templates/goforms/message/form.ts","../src/templates/goforms/multiValueRow/index.ts","../src/templates/goforms/multiValueRow/form.ts","../src/templates/goforms/multiValueTable/index.ts","../src/templates/goforms/multiValueTable/form.ts","../src/templates/goforms/panel/index.ts","../src/templates/goforms/panel/form.ts","../src/templates/goforms/radio/form.ts","../src/templates/goforms/radio/html.ts","../src/templates/goforms/radio/index.ts","../src/templates/goforms/resourceAdd/form.ts","../src/templates/goforms/resourceAdd/index.ts","../src/templates/goforms/select/form.ts","../src/templates/goforms/select/html.ts","../src/templates/goforms/select/index.ts","../src/templates/goforms/selectOption/form.ts","../src/templates/goforms/selectOption/html.ts","../src/templates/goforms/selectOption/index.ts","../src/templates/goforms/signature/index.ts","../src/templates/goforms/survey/form.ts","../src/templates/goforms/survey/html.ts","../src/templates/goforms/survey/index.ts","../src/templates/goforms/tab/form.ts","../src/templates/goforms/tab/flat.ts","../src/templates/goforms/tab/index.ts","../src/templates/goforms/table/form.ts","../src/templates/goforms/table/index.ts","../src/templates/goforms/tree/form.ts","../src/templates/goforms/tree/index.ts","../src/templates/goforms/tree/partials/index.ts","../src/templates/goforms/webform/index.ts","../src/templates/goforms/well/index.ts","../src/templates/goforms/wizard/form.ts","../src/templates/goforms/wizard/index.ts","../src/templates/goforms/wizardHeader/form.ts","../src/templates/goforms/wizardHeader/index.ts","../src/templates/goforms/wizardHeaderClassic/form.ts","../src/templates/goforms/wizardHeaderClassic/index.ts","../src/templates/goforms/wizardHeaderVertical/index.ts","../src/templates/goforms/wizardNav/index.ts","../src/templates/goforms/alert/index.ts","../src/templates/goforms/alert/form.ts","../src/templates/goforms/errorsList/index.ts","../src/templates/goforms/errorsList/form.ts","../src/templates/goforms/index.ts","../src/components/CustomTextField.ts","../src/components/index.ts","../src/index.ts"],"sourcesContent":["import form from \"./form\";\nexport default { form };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => `\n<div class=\"formio builder ui grid formbuilder\">\n  <div class=\"four wide column formcomponents\">\n    ${ctx.sidebar}\n  </div>\n  <div class=\"twelve wide column formarea\" ref=\"form\">\n    ${ctx.form}\n  </div>\n</div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const html = ctx.html as string;\n  return `<div class=\"builder-component\" ref=\"dragComponent\">\n    <div class=\"component-btn-group\" data-noattach=\"true\">\n      <div class=\"ui button mini icon primary component-settings-button-edit\" ref=\"editComponent\">\n        <i class=\"${iconClass(\"cog\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon component-settings-button-copy\" ref=\"copyComponent\">\n        <i class=\"${iconClass(\"copy\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon component-settings-button-paste\" ref=\"pasteComponent\">\n        <i class=\"${iconClass(\"save\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon component-settings-button-edit-json\" ref=\"editJson\">\n        <i class=\"${iconClass(\"wrench\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon component-settings-button-move\" ref=\"moveComponent\">\n        <i class=\"${iconClass(\"move\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon secondary component-settings-button-remove\" ref=\"removeComponent\">\n        <i class=\"${iconClass(\"remove\")}\"></i>\n      </div>\n    </div>\n    ${html}\n  </div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (\n  ctx: TemplateContext\n) => `<div class=\"builder-components drag-container ${ctx.type}\" ref=\"${ctx.key}-container\">\n  ${ctx.html}\n</div>\n`;\n","import value from \"./form\";\nimport type { BuilderEditFormContext } from \"../../../types/contexts\";\n\ninterface BuilderEditForm {\n  form: (ctx: BuilderEditFormContext) => string;\n}\n\nconst builderEditForm: BuilderEditForm = { form: value };\n\nexport default builderEditForm;\n","interface BuilderEditFormContext {\n  t: (key: string) => string;\n  componentInfo: {\n    title: string;\n    documentation?: string;\n    help?: string;\n  };\n  iconClass: (name: string) => string;\n  preview?: boolean;\n  editForm?: string;\n}\n\nexport default (ctx: BuilderEditFormContext) => `\n  <div class=\"formio-dialog formio-dialog-theme-default\">\n    <div class=\"formio-dialog-content\">\n      <div class=\"formio-dialog-content-header\">\n        <h3 class=\"lead\">${ctx.t(ctx.componentInfo.title)} ${ctx.t(\"Component\")}</h3>\n        ${\n          ctx.componentInfo.documentation\n            ? `\n        <a href=\"${ctx.componentInfo.documentation}\" target=\"_blank\">\n          <i class=\"${ctx.iconClass(\"new-window\")}\"> ${ctx.t(\"Help\")}</i>\n        </a>\n        `\n            : \"\"\n        }\n      </div>\n      <div class=\"formio-dialog-content-body\">\n        <div class=\"formio-component-edit-container\">\n          <div class=\"formio-component-edit-content\">\n            <div class=\"formio-component-edit-content-header\">\n              <div class=\"formio-component-edit-content-header-actions\">\n                <button class=\"ui button primary\" style=\"margin-right: 10px;\" ref=\"saveButton\">${ctx.t(\"Save\")}</button>\n                <button class=\"ui button default\" style=\"margin-right: 10px;\" ref=\"cancelButton\">${ctx.t(\"Cancel\")}</button>\n                <button class=\"ui button negative\" ref=\"removeButton\">${ctx.t(\"Remove\")}</button>\n              </div>\n            </div>\n            <div class=\"formio-component-edit-content-body\">\n              <div class=\"formio-component-edit-content-body-preview\">\n                <div class=\"formio-component-edit-content-body-preview-header\">\n                  ${ctx.t(\"Preview\")}\n                </div>\n                <div class=\"formio-component-edit-content-body-preview-content\">\n                  <div class=\"formio-component-edit-content-body-preview-content-help\">\n                    ${\n                      ctx.componentInfo.help\n                        ? `\n                    <div class=\"formio-component-edit-content-body-preview-content-help-content\">\n                      ${ctx.componentInfo.help}\n                    </div>\n                    `\n                        : \"\"\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"formio-dialog-content-footer\">\n        <div class=\"formio-dialog-content-footer-actions\">\n          <button class=\"ui button primary\" style=\"margin-right: 10px;\" ref=\"saveButton\">${ctx.t(\"Save\")}</button>\n          <button class=\"ui button default\" style=\"margin-right: 10px;\" ref=\"cancelButton\">${ctx.t(\"Cancel\")}</button>\n          <button class=\"ui button negative\" ref=\"removeButton\">${ctx.t(\"Remove\")}</button>\n        </div>\n      </div>\n    </div>\n  </div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => `<div\n  class=\"ui info message no-drag\"\n  style=\"text-align:center; margin-bottom: 5px;\"\n  role=\"alert\"\n  data-noattach=\"true\"\n  data-position=\"${ctx.position}\"\n>\n  Drag and Drop a form component\n</div>\n`;\n","import value from \"./form\";\nimport type { BuilderSidebarContext } from \"../../../types/contexts\";\n\ninterface BuilderSidebar {\n  form: (ctx: BuilderSidebarContext) => string;\n}\n\nconst builderSidebar: BuilderSidebar = { form: value };\n\nexport default builderSidebar;\n","interface BuilderSidebarContext {\n  t: (key: string) => string;\n  groups: string[];\n}\n\nexport default (ctx: BuilderSidebarContext) => `\n  <div class=\"formio-builder-sidebar\">\n    ${ctx.groups.map((group: string) => `${group}`).join(\"\")}\n  </div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const group = ctx.group as {\n    componentOrder: string[];\n    components: Record<\n      string,\n      { key: string; schema: { type: string }; icon?: string; title: string }\n    >;\n    title: string;\n    default?: boolean;\n  };\n  const t = ctx.t as (s: string) => string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const subgroups = ctx.subgroups as string[];\n\n  const components = group.componentOrder\n    .map((componentKey: string) => {\n      const component = group.components[componentKey];\n      return `<span\n      data-group=\"${ctx.groupKey}\"\n      data-key=\"${component.key}\"\n      data-type=\"${component.schema.type}\"\n      class=\"ui button mini primary fluid formcomponent drag-copy\"\n    >\n      ${component.icon ? `<i class=\"${iconClass(component.icon)}\" style=\"margin-right: 5px;\"></i>` : \"\"}\n      ${t(component.title)}\n    </span>`;\n    })\n    .join(\"\");\n\n  return `<div class=\"ui segment secondary form-builder-panel\" style=\"padding: 0\" ref=\"group-panel-${ctx.groupKey}\">\n    <div class=\"form-builder-group-header\">\n      <h5 class=\"panel-title\">\n        <button\n          class=\"ui button basic fluid builder-group-button\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#group-${ctx.groupKey}\"\n          data-parent=\"${ctx.groupId}\"\n          ref=\"sidebar-anchor\"\n        >\n          ${t(group.title)}\n        </button>\n      </h5>\n    </div>\n  </div>\n  <div class=\"ui segment\" style=\"padding: 0\">\n    <div\n      class=\"panel-collapse collapse ${group.default ? \" in\" : \"\"}\"\n      data-parent=\"#${ctx.groupId}\"\n      data-default=\"${group.default}\"\n      id=\"group-${ctx.groupKey}\"\n      ref=\"sidebar-group\"\n    >\n      <div id=\"group-container-${ctx.groupKey}\" class=\"card-body panel-body no-drop\" ref=\"sidebar-container\">\n        ${components}\n        ${subgroups.join(\"\")}\n      </div>\n    </div>\n  </div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const pages = ctx.pages as Array<{ title: string }>;\n  const self = ctx.self as { page: number };\n  const t = ctx.t as (s: string) => string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const sidebar = ctx.sidebar as string;\n  const form = ctx.form as string;\n\n  const pageBreadcrumbs = pages\n    .map(\n      (page, pageIndex: number) => `\n        <div title=\"${page.title}\" class=\"${pageIndex === self.page ? \"active section\" : \"section\"} wizard-page-label\" ref=\"gotoPage\">${page.title}</div>\n        <div class=\"divider\">/</div>\n      `\n    )\n    .join(\"\");\n  return `<div class=\"formio builder ui grid formbuilder\">\n    <div class=\"four wide column formcomponents\">\n      ${sidebar}\n    </div>\n    <div class=\"twelve wide column formarea\">\n      <div class=\"ui breadcrumb\" style=\"margin-bottom: 0.5em\">\n        ${pageBreadcrumbs}\n        <div title=\"${t(\"Create Page\")}\" class=\"section wizard-page-label\" ref=\"addPage\"><i class=\"${iconClass(\"plus\")}\"></i> ${t(\"Page\")}</div>\n      </div>\n      <div ref=\"form\">\n        ${form}\n      </div>\n    </div>\n  </div>`;\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const input = ctx.input as {\n    type: string;\n    attr?: Record<string, string>;\n    content?: string;\n    labelClass?: string;\n  };\n  const component = ctx.component as {\n    theme?: string;\n    customClass?: string;\n    leftIcon?: string;\n    rightIcon?: string;\n    tooltip?: string;\n  };\n  const transform = ctx.transform as (type: string, value: unknown) => string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n\n  const attrs = Object.entries(input.attr || {})\n    .map(([attr, value]) => `${attr}=\"${value}\"`)\n    .join(\" \");\n  return `<${input.type}\n    ref=\"button\"\n    class=\"ui button ${transform(\"theme\", component.theme)} ${component.customClass || \"\"}\"\n    ${attrs}\n  >\n  ${component.leftIcon ? `<i class=\"${component.leftIcon}\"></i>&nbsp;` : \"\"}\n  ${input.content || \"\"}\n  ${component.tooltip ? `<i ref=\"tooltip\" class=\"${iconClass(\"question-sign\")}\" text-muted\" data-tooltip=\"${component.tooltip}\"></i>` : \"\"}\n  ${component.rightIcon ? `&nbsp;<i class=\"${component.rightIcon}\"></i>` : \"\"}\n  </${input.type}>\n  <div ref=\"buttonMessageContainer\">\n    <span class=\"help-block\" ref=\"buttonMessage\"></span>\n  </div>`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const input = ctx.input as {\n    type: string;\n    attr?: Record<string, string>;\n    content?: string;\n    labelClass?: string;\n    label?: string;\n  };\n  const component = ctx.component as { tooltip?: string };\n  const self = ctx.self as { labelIsHidden: () => boolean };\n  const iconClass = ctx.iconClass as (icon: string) => string;\n\n  const attrs = Object.entries(input.attr || {})\n    .map(([attr, value]) => `${attr}=\"${value}\"`)\n    .join(\" \");\n  return `<div class=\"ui checkbox\">\n    <${input.type}\n      ref=\"input\"\n      id=\"${ctx.id}\"\n      ${attrs}\n      ${ctx.checked ? \"checked=true\" : \"\"}\n    >\n    </${input.type}>\n    <label class=\"${input.labelClass || \"\"}\" for=\"${ctx.id}\">\n      ${input.content || \"\"}\n      ${!self.labelIsHidden() ? `<span>${input.label || \"\"}</span>` : \"\"}\n    </label>\n    ${component.tooltip ? `<i ref=\"tooltip\" class=\"${iconClass(\"question-sign\")} text-muted\" data-tooltip=\"${component.tooltip}\"></i>` : \"\"}\n  </div>`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nimport type { ColumnsContext } from \"../../../types/contexts\";\n\ninterface Columns {\n  form: (ctx: ColumnsContext) => string;\n}\n\nconst columns: Columns = { form: value };\n\nexport default columns;\n","interface ColumnsContext {\n  t: (key: string) => string;\n  component: {\n    columns: Array<{\n      width: number;\n      components: unknown[];\n    }>;\n  };\n  transform: (type: string, value: string | number) => string;\n  columnComponents: unknown[];\n  columnKey: string;\n}\n\nexport default (ctx: ColumnsContext) => `\n  <div class=\"formio-columns\">\n    ${ctx.component.columns\n      .map(\n        (column, index) => `\n      <div class=\"${ctx.transform(\"columns\", column.width)} wide column\" ref=\"${ctx.columnKey}\">\n        ${ctx.columnComponents[index]}\n      </div>\n    `\n      )\n      .join(\"\")}\n  </div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  return `<div id=\"${ctx.id}\" class=\"field ${ctx.classes}\"${ctx.styles ? ` style=\"${ctx.styles}\"` : \"\"} ref=\"component\">\n    ${\n      ctx.visible\n        ? `\n    ${ctx.children}\n    <div ref=\"messageContainer\"></div>\n    `\n        : \"\"\n    }\n  </div>`;\n};\n","export default {\n  \"has-error\": \"error\",\n  \"is-invalid\": \"error\",\n  \"formio-tab-panel-active\": \"active\",\n  \"formio-tab-link-active\": \"active\",\n  \"formio-tab-link-container-active\": \"active\",\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const component = ctx.component as {\n    layoutFixed?: boolean;\n    reorder?: boolean;\n    striped?: boolean;\n    bordered?: boolean;\n    hover?: boolean;\n    condensed?: boolean;\n    addAnother?: string;\n  };\n  const columns = ctx.columns as Array<{\n    validate?: { required?: boolean };\n    hideLabel?: boolean;\n    label?: string;\n    title?: string;\n    tooltip?: string;\n  }>;\n  const rows = ctx.rows as unknown[];\n  const t = ctx.t as (s: string) => string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const datagridKey = ctx.datagridKey as string;\n  const hasAddButton = !!ctx.hasAddButton;\n  const hasBottomSubmit = !!ctx.hasBottomSubmit;\n  const hasHeader = !!ctx.hasHeader;\n  const hasExtraColumn = !!ctx.hasExtraColumn;\n  const addButtonLocation = ctx.addButtonLocation as string;\n  const addButton = ctx.addButton as string;\n  const numColumns = Number(ctx.numColumns);\n\n  const tableStyle = component.layoutFixed ? 'style=\"table-layout: fixed;\"' : \"\";\n  const header = hasHeader\n    ? `\n    <thead>\n      <tr>\n        ${component.reorder ? \"<th></th>\" : \"\"}\n        ${columns\n          .map(\n            (col) => `\n          <th class=\"${col.validate && col.validate.required ? \"field-required\" : \"\"}\">\n            ${col.hideLabel ? \"\" : t(col.label || col.title || \"\")}\n            ${col.tooltip ? ` <i ref=\"tooltip\" data-title=\"${col.tooltip}\" class=\"${iconClass(\"question-sign\")} text-muted\" data-tooltip=\"${col.tooltip}\"></i>` : \"\"}\n          </th>\n        `\n          )\n          .join(\"\")}\n        ${\n          hasExtraColumn\n            ? `<th>\n          ${hasAddButton && addButtonLocation === \"header\" ? addButton : \"\"}\n        </th>`\n            : \"\"\n        }\n      </tr>\n    </thead>\n  `\n    : \"\";\n\n  const body = rows\n    .map(\n      (row) => `\n    <tr>${row}</tr>\n  `\n    )\n    .join(\"\");\n\n  const footer =\n    hasAddButton && hasBottomSubmit\n      ? `\n    <tfoot>\n      <tr>\n        <td colspan=\"${numColumns + 1}\">\n          <button class=\"ui button primary\" ref=\"${datagridKey}-addRow\">\n            <i class=\"${iconClass(\"plus\")}\"></i> ${t(component.addAnother || \"Add Another\")}\n          </button>\n        </td>\n      </tr>\n    </tfoot>\n  `\n      : \"\";\n\n  return `<table class=\"ui table datagrid-table\n    ${component.striped ? \"striped\" : \"\"}\n    ${component.bordered ? \"celled\" : \"\"}\n    ${component.hover ? \"selectable\" : \"\"}\n    ${component.condensed ? \"compact\" : \"padded\"}\n    \" ${tableStyle}>\n    ${header}\n    <tbody ref=\"${datagridKey}-tbody\">\n      ${body}\n    </tbody>\n    ${footer}\n  </table>`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const component = ctx.component as { key: string };\n  const t = ctx.t as (s: string) => string;\n  return `<div class=\"ui grid\">\n    ${\n      ctx.dayFirst && ctx.showDay\n        ? `\n      <div class=\"four wide column\">\n        <label for=\"${component.key}-day\" class=\"\">${t(\"Day\")}</label>\n        ${ctx.day}\n      </div>\n    `\n        : \"\"\n    }\n    ${\n      ctx.showMonth\n        ? `\n      <div class=\"five wide column\">\n        <label for=\"${component.key}-month\" class=\"\">${t(\"Month\")}</label>\n        ${ctx.month}\n      </div>\n    `\n        : \"\"\n    }\n    ${\n      !ctx.dayFirst && ctx.showDay\n        ? `\n      <div class=\"four wide column\">\n        <label for=\"${component.key}-day\" class=\"\">${t(\"Day\")}</label>\n        ${ctx.day}\n      </div>\n    `\n        : \"\"\n    }\n    ${\n      ctx.showYear\n        ? `\n      <div class=\"seven wide column\">\n        <label for=\"${component.key}-year\" class=\"\">${t(\"Year\")}</label>\n        ${ctx.year}\n      </div>\n    `\n        : \"\"\n    }\n  </div>`;\n};\n","import { EditGridContext } from \"../../../types/contexts\";\nimport form from \"./form\";\nimport html from \"./html\";\n\ninterface EditGrid {\n  form: (ctx: EditGridContext) => string;\n  html: (ctx: EditGridContext) => string;\n}\n\nconst editgrid: EditGrid = { form, html };\n\nexport default editgrid;\n","import { EditGridContext } from \"../../../types/contexts\";\n\nexport default (ctx: EditGridContext) => `\n  <div class=\"formio-editgrid\">\n    <div class=\"formio-editgrid-header\">\n      ${ctx.header}\n    </div>\n    <div class=\"formio-editgrid-body\">\n      ${ctx.rows\n        .map(\n          (row, index) => `\n        <div class=\"formio-editgrid-row\">\n          <div class=\"formio-editgrid-row-header\">\n            <div class=\"formio-editgrid-row-title\">\n              ${ctx.t(\"Row\")} ${index + 1}\n            </div>\n            <div class=\"formio-editgrid-row-actions\">\n              ${\n                !ctx.readOnly\n                  ? `\n                <button class=\"ui button\" onclick=\"event.preventDefault(); ${ctx.ref.removeRow(index)}\">\n                  <i class=\"${ctx.iconClass(\"remove\")}\"></i>\n                </button>\n              `\n                  : \"\"\n              }\n            </div>\n          </div>\n          <div class=\"formio-editgrid-row-content\">\n            ${ctx.preview}\n          </div>\n          ${\n            ctx.errors[index]\n              ? `\n            <div class=\"formio-editgrid-row-error\">\n              ${ctx.errors[index]}\n            </div>\n          `\n              : \"\"\n          }\n        </div>\n      `\n        )\n        .join(\"\")}\n    </div>\n    <div class=\"formio-editgrid-footer\">\n      ${\n        !ctx.readOnly\n          ? `\n        <button class=\"ui button primary\" onclick=\"event.preventDefault(); ${ctx.ref.addRow()}\">\n          <i class=\"${ctx.iconClass(\"plus\")}\"></i> ${ctx.addAnother}\n        </button>\n      `\n          : \"\"\n      }\n      ${ctx.footer}\n    </div>\n  </div>\n`;\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nimport align from \"./align\";\n\nexport default { form: value, align };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { FieldsetContext } from \"../../../types/contexts\";\nimport form from \"./form\";\n\ninterface Fieldset {\n  form: (context: FieldsetContext) => string;\n}\n\nconst fieldset: Fieldset = {\n  form,\n};\n\nexport default fieldset;\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { FileContext } from \"../../../types/contexts\";\nimport form from \"./form\";\nimport html from \"./html\";\n\ninterface File {\n  form: (context: FileContext) => string;\n  html: (context: FileContext) => string;\n}\n\nconst file: File = {\n  form,\n  html,\n};\n\nexport default file;\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { FileContext } from \"../../../types/contexts\";\n\nexport default (ctx: FileContext) => `\n  <div class=\"ui file input\">\n    <input\n      type=\"file\"\n      name=\"${ctx.input.name}\"\n      value=\"${ctx.input.value}\"\n      ref=\"${ctx.input.ref}\"\n      ${ctx.component.multiple ? \"multiple\" : \"\"}\n      ${ctx.component.filePattern ? `accept=\"${ctx.component.filePattern}\"` : \"\"}\n      ${\n        ctx.input.attr\n          ? Object.entries(ctx.input.attr)\n              .map(([key, value]) => `${key}=\"${value}\"`)\n              .join(\" \")\n          : \"\"\n      }\n    />\n  </div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const icon = ctx.icon as string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  return `<i class=\"${iconClass(icon)}\"></i>`;\n};\n","export default (iconset: string, name: string, spinning?: boolean): string => {\n  const icons: Record<string, string> = {\n    \"plus-squre-o\": \"plus square outline\",\n    \"minus-squre-o\": \"minus square outline\",\n    \"question-sign\": \"question circle\",\n    \"remove-circle\": \"trash alternate outline\",\n    \"new-window\": \"external alternate\",\n    \"files-o\": \"file outline\",\n    move: \"arrows alternate\",\n    link: \"linkify\",\n  };\n  if (Object.prototype.hasOwnProperty.call(icons, name)) {\n    name = icons[name];\n  }\n  name = name || \"\";\n  name = name.replace(/-/g, \" \");\n  name = name.replace(/ o$/, \" outline\");\n  return spinning ? `icon ${name} loading` : `icon ${name}`;\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { TemplateContext } from \"../types\";\n\nexport default function (_ctx: TemplateContext) {\n  return `<div class=\"formio-loader\">\n    <div class=\"loader-wrapper\">\n      <div class=\"ui active centered inline loader\"></div>\n    </div>\n  </div>\n  `;\n}\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default function (_ctx: TemplateContext) {\n  return \"\";\n}\n","import value from \"./form\";\n\nexport default { form: value };\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => `<div class=\"ui pointing red basic label ${ctx.level}\">\n  ${ctx.message}\n</div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { PanelContext } from \"../../../types/contexts\";\nimport form from \"./form\";\n\ninterface Panel {\n  form: (context: PanelContext) => string;\n}\n\nconst panel: Panel = {\n  form,\n};\n\nexport default panel;\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { RadioFormContext } from \"../../../types/contexts\";\n\nexport default function form(context: RadioFormContext): string {\n  const { component, input } = context;\n  const { key, label, values } = component;\n  const { name, value, ref } = input;\n\n  return `<div class=\"form-group\">\n    <label for=\"${key}\">${label}</label>\n    <div class=\"radio-group\">\n      ${values\n        .map(\n          (item) => `\n        <div class=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"${key}-${item.value}\"\n            name=\"${name}\"\n            value=\"${item.value}\"\n            ref=\"${ref}\"\n            ${value === item.value ? \"checked\" : \"\"}\n          />\n          <label for=\"${key}-${item.value}\">${item.label}</label>\n        </div>\n      `\n        )\n        .join(\"\")}\n    </div>\n  </div>`;\n}\n","import { RadioHTMLContext } from \"../../../types/contexts\";\n\nexport default function html(context: RadioHTMLContext): string {\n  const { component, input } = context;\n  const { values } = component;\n  const { value } = input;\n\n  return `<div class=\"radio-display\">\n    ${values\n      .filter((item) => {\n        if (value == null) return false;\n        if (value === item.value) return true;\n        if (typeof value === \"object\") {\n          const objValue = value as Record<string, unknown>;\n          return Object.prototype.hasOwnProperty.call(objValue, item.value) && objValue[item.value];\n        }\n        return false;\n      })\n      .map((item) => item.label)\n      .join(\", \")}\n  </div>`;\n}\n","import { RadioFormContext, RadioHTMLContext } from \"../../../types/contexts\";\nimport form from \"./form\";\nimport html from \"./html\";\n\ninterface Radio {\n  form: (context: RadioFormContext) => string;\n  html: (context: RadioHTMLContext) => string;\n}\n\nconst radio: Radio = {\n  form,\n  html,\n};\n\nexport default radio;\n","import { TemplateContext } from \"../types\";\n\nexport default function (ctx: TemplateContext) {\n  const t = ctx.t as (s: string) => string;\n  const iconClass = ctx.iconClass as (s: string) => string;\n  const component = ctx.component as { addResourceLabel?: string };\n  return `<table class=\"ui table celled\">\n    <tbody>\n      <tr>\n        <td>\n          ${ctx.element}\n        </td>\n      </tr>\n      <tr>\n        <td colspan=\"2\">\n          <button class=\"ui button primary\" ref=\"addResource\">\n            <i class=\"${iconClass(\"plus\")}\"></i>\n            ${t(component.addResourceLabel || \"Add Resource\")}\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  `;\n}\n","import value from \"./form\";\n\nexport default { form: value };\n","import { SelectContext } from \"../../../types/contexts\";\n\nexport default function form(context: SelectContext): string {\n  const { input, instance, component, options } = context;\n  const { multiple, attr, ref } = input;\n  const { id } = instance;\n  const { key } = component;\n\n  return `<select\n    ref=\"${ref || \"selectContainer\"}\"\n    class=\"ui search dropdown\"\n    ${multiple ? \"multiple\" : \"\"}\n    ${Object.entries(attr || {})\n      .map(([attr, value]) => `${attr}=\"${value}\"`)\n      .join(\" \")}\n    ${!attr?.id ? `id=\"${id}-${key}\"` : \"\"}\n  >${options}</select>\n  <input type=\"text\"\n         class=\"formio-select-autocomplete-input\"\n         ref=\"autocompleteInput\"\n         ${attr?.autocomplete ? `autocomplete=\"${attr.autocomplete}\"` : \"\"}\n         tabindex=\"-1\"\n  />`;\n}\n","import { SelectHTMLContext } from \"../../../types/contexts\";\n\nexport default function html(context: SelectHTMLContext): string {\n  const { component, options } = context;\n  const { key } = component;\n\n  return `<div class=\"select-display\" id=\"${key}\">\n    ${options || \"-\"}\n  </div>`;\n}\n","import { SelectContext, SelectHTMLContext } from \"../../../types/contexts\";\nimport form from \"./form\";\nimport html from \"./html\";\n\ninterface Select {\n  form: (context: SelectContext) => string;\n  html: (context: SelectHTMLContext) => string;\n}\n\nconst select: Select = {\n  form,\n  html,\n};\n\nexport default select;\n","import { SelectOptionContext } from \"../../../types/contexts\";\n\nexport default function form(context: SelectOptionContext): string {\n  const { selected, option, attrs } = context;\n  const { value, label } = option;\n\n  return `<option ${selected ? 'selected=\"selected\"' : \"\"}\n    value='${value}'\n    ${Object.entries(attrs || {})\n      .map(([attr, value]) => `${attr}=\"${value}\"`)\n      .join(\" \")}>\n    ${label}\n  </option>`;\n}\n","import { SelectOptionHTMLContext } from \"../../../types/contexts\";\n\nexport default function html(context: SelectOptionHTMLContext): string {\n  const { selected, option } = context;\n  const { label } = option;\n\n  return selected ? label : \"\";\n}\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { SignatureFormContext } from \"../../../types/contexts\";\n\ninterface Signature {\n  form: (context: SignatureFormContext) => string;\n}\n\nconst signature: Signature = {\n  form: (context) => {\n    const { component, input, element } = context;\n    const width = element?.width || 300;\n    const height = element?.height || 200;\n    const backgroundColor = element?.backgroundColor || \"#ffffff\";\n\n    return `\n      <div class=\"signature-pad-container\">\n        <label for=\"${input.ref}\">${component.label}</label>\n        <div class=\"signature-pad\" \n             style=\"width: ${width}px; height: ${height}px; background-color: ${backgroundColor};\">\n          <canvas id=\"${input.ref}\" \n                  width=\"${width}\" \n                  height=\"${height}\"\n                  style=\"border: 1px solid #ccc;\"></canvas>\n        </div>\n        <input type=\"hidden\" \n               name=\"${input.name}\" \n               value=\"${input.value}\" \n               ref=\"${input.ref}\" />\n        <button type=\"button\" class=\"btn btn-secondary clear-signature\">Clear</button>\n      </div>\n    `;\n  },\n};\n\nexport default signature;\n","import { SurveyFormContext } from \"../../../types/contexts\";\n\nexport default function form(context: SurveyFormContext): string {\n  const { component, input } = context;\n  const { key, label } = component;\n  const { value } = input;\n\n  return `<div class=\"survey-form\">\n    <label for=\"${key}\">${label}</label>\n    <div class=\"survey-questions\">\n      ${value || \"-\"}\n    </div>\n  </div>`;\n}\n","import { SurveyHTMLContext } from \"../../../types/contexts\";\n\nexport default function html(context: SurveyHTMLContext): string {\n  const { component, input } = context;\n  const { key, label } = component;\n  const { value } = input;\n\n  return `<div class=\"survey-display\" id=\"${key}\">\n    <label>${label}</label>\n    <div class=\"survey-answers\">\n      ${value || \"-\"}\n    </div>\n  </div>`;\n}\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TabFormContext } from \"../../../types/contexts\";\n\nexport default function form(context: TabFormContext): string {\n  const { component, input } = context;\n  const { key, label } = component;\n  const { value } = input;\n\n  return `<div class=\"tab-form\">\n    <label for=\"${key}\">${label}</label>\n    <div class=\"tab-content\">\n      ${value || \"-\"}\n    </div>\n  </div>`;\n}\n","import { TabFlatContext } from \"../../../types/contexts\";\n\nexport default function flat(context: TabFlatContext): string {\n  const { component, input } = context;\n  const { key, label } = component;\n  const { value } = input;\n\n  return `<div class=\"tab-flat\" id=\"${key}\">\n    <label>${label}</label>\n    <div class=\"tab-content\">\n      ${value || \"-\"}\n    </div>\n  </div>`;\n}\n","import value from \"./form\";\nimport flat from \"./flat\";\n\nexport default { form: value, flat };\n","import { TableContext } from \"../../../types/contexts\";\n\nexport default function form(context: TableContext): string {\n  const { component, input } = context;\n  const { key, label } = component;\n  const { value } = input;\n\n  return `<div class=\"table-form\">\n    <label for=\"${key}\">${label}</label>\n    <div class=\"table-content\">\n      ${value || \"-\"}\n    </div>\n  </div>`;\n}\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TreeFormContext } from \"../../../types/contexts\";\n\nexport default function form(context: TreeFormContext): string {\n  const { view, content, childNodes } = context;\n\n  return `<div class=\"tree-form\">\n    <div class=\"tree-content\">\n      ${view}\n      ${content ? `<div class=\"tree-node-content\">${content}</div>` : \"\"}\n      ${childNodes && childNodes.length ? `<div class=\"tree-node-children\">${childNodes.join(\"\")}</div>` : \"\"}\n    </div>\n  </div>`;\n}\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TreeEditContext, TreeViewContext } from '../../../../types/contexts';\n\nconst treeView = (context: TreeViewContext): string => {\n  // Implementation here\n  return '';\n};\n\nconst treeEdit = (context: TreeEditContext): string => {\n  // Implementation here\n  return '';\n};\n\nexport default {\n  treeView,\n  treeEdit,\n};\n","import { FormContext } from '../../../types/contexts';\n\nconst form = (context: FormContext): string => {\n  // Implementation here\n  return '';\n};\n\nexport default { form };\n","import { FormContext } from '../../../types/contexts';\n\nconst form = (context: FormContext): string => {\n  // Implementation here\n  return '';\n};\n\nexport default { form };\n","import { WizardFormContext } from \"../../../types/contexts\";\n\nexport default function form(context: WizardFormContext): string {\n  const { component, input } = context;\n  const { key, label } = component;\n  const { value } = input;\n\n  return `<div class=\"wizard-form\">\n    <label for=\"${key}\">${label}</label>\n    <div class=\"wizard-content\">\n      ${value || \"-\"}\n    </div>\n  </div>`;\n}\n","import value from \"./form\";\n\nexport default { form: value };\n","import { WizardHeaderFormContext } from \"../../../types/contexts\";\n\nexport default function form(context: WizardHeaderFormContext): string {\n  const { component, input } = context;\n  const { key, label } = component;\n  const { value } = input;\n\n  return `<div class=\"wizard-header-form\">\n    <label for=\"${key}\">${label}</label>\n    <div class=\"wizard-header-content\">\n      ${value || \"-\"}\n    </div>\n  </div>`;\n}\n","import value from \"./form\";\nexport default { form: value };\n","import { WizardHeaderClassicFormContext } from \"../../../types/contexts\";\n\nexport default function form(context: WizardHeaderClassicFormContext): string {\n  const { component, input } = context;\n  const { key, label } = component;\n  const { value } = input;\n\n  return `<div class=\"wizard-header-classic-form\">\n    <label for=\"${key}\">${label}</label>\n    <div class=\"wizard-header-classic-content\">\n      ${value || \"-\"}\n    </div>\n  </div>`;\n}\n","import value from \"./form\";\nexport default { form: value };\n","import { FormContext } from '../../../types/contexts';\n\nconst form = (context: FormContext): string => {\n  // Implementation here\n  return '';\n};\n\nexport default { form };\n","import { FormContext } from '../../../types/contexts';\n\nconst form = (context: FormContext): string => {\n  // Implementation here\n  return '';\n};\n\nexport default { form };\n","import form from \"./form\";\n\nexport default { form };\n","export interface AlertTemplateContext {\n  attrs: Record<string, string>;\n  message: string;\n}\n\nexport default (ctx: AlertTemplateContext) => {\n  let attrs = \"\";\n  for (const attr in ctx.attrs) {\n    if (attr === \"class\") {\n      attrs += `${attr}=\"ui message ${ctx.attrs[attr]}\" `;\n    } else {\n      attrs += `${attr}=\"${ctx.attrs[attr]}\" `;\n    }\n  }\n  return `<div ${attrs.trim()}>${ctx.message}</div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import builder from \"./builder\";\nimport builderComponent from \"./builderComponent\";\nimport builderComponents from \"./builderComponents\";\nimport builderEditForm from \"./builderEditForm\";\nimport builderPlaceholder from \"./builderPlaceholder\";\nimport builderSidebar from \"./builderSidebar\";\nimport builderSidebarGroup from \"./builderSidebarGroup\";\nimport builderWizard from \"./builderWizard\";\nimport button from \"./button\";\nimport checkbox from \"./checkbox\";\nimport columns from \"./columns\";\nimport component from \"./component\";\nimport cssClasses from \"./cssClasses\";\nimport datagrid from \"./datagrid\";\nimport day from \"./day\";\nimport editgrid from \"./editgrid\";\nimport field from \"./field\";\nimport fieldset from \"./fieldset\";\nimport file from \"./file\";\nimport icon from \"./icon\";\nimport iconClass from \"./iconClass\";\nimport input from \"./input\";\nimport label from \"./label\";\nimport loader from \"./loader\";\nimport loading from \"./loading\";\nimport message from \"./message\";\nimport multiValueRow from \"./multiValueRow\";\nimport multiValueTable from \"./multiValueTable\";\nimport panel from \"./panel\";\nimport radio from \"./radio\";\nimport resourceAdd from \"./resourceAdd\";\nimport select from \"./select\";\nimport selectOption from \"./selectOption\";\nimport signature from \"./signature\";\nimport survey from \"./survey\";\nimport tab from \"./tab\";\nimport table from \"./table\";\nimport tree from \"./tree\";\nimport treePartials from \"./tree/partials\";\nimport webform from \"./webform\";\nimport well from \"./well\";\nimport wizard from \"./wizard\";\nimport wizardHeader from \"./wizardHeader\";\nimport wizardHeaderClassic from \"./wizardHeaderClassic\";\nimport wizardHeaderVertical from \"./wizardHeaderVertical\";\nimport wizardNav from \"./wizardNav\";\nimport alert from \"./alert\";\nimport errorsList from \"./errorsList\";\n\nconst columnsMap: Record<string, string> = {\n  1: \"one\",\n  2: \"two\",\n  3: \"three\",\n  4: \"four\",\n  5: \"five\",\n  6: \"six\",\n  7: \"seven\",\n  8: \"eight\",\n  9: \"nine\",\n  10: \"ten\",\n  11: \"eleven\",\n  12: \"twelve\",\n  13: \"thirteen\",\n  14: \"fourteen\",\n  15: \"fifteen\",\n  16: \"sixteen\",\n};\n\ninterface GoFormsTemplate {\n  transform: (type: string, text: string | number) => string;\n  defaultIconset: string;\n  iconClass: (iconset: string, name: string, spinning?: boolean) => string;\n  cssClasses: Record<string, string>;\n  builder: unknown;\n  builderComponent: unknown;\n  builderComponents: unknown;\n  builderEditForm: unknown;\n  builderPlaceholder: unknown;\n  builderSidebar: unknown;\n  builderSidebarGroup: unknown;\n  builderWizard: unknown;\n  button: unknown;\n  checkbox: unknown;\n  columns: unknown;\n  component: unknown;\n  datagrid: unknown;\n  day: unknown;\n  editgrid: unknown;\n  field: unknown;\n  fieldset: unknown;\n  file: unknown;\n  icon: unknown;\n  input: unknown;\n  label: unknown;\n  loader: unknown;\n  loading: unknown;\n  message: unknown;\n  multiValueRow: unknown;\n  multiValueTable: unknown;\n  panel: unknown;\n  radio: unknown;\n  resourceAdd: unknown;\n  select: unknown;\n  selectOption: unknown;\n  signature: unknown;\n  survey: unknown;\n  tab: unknown;\n  tree: unknown;\n  treeEdit: unknown;\n  treeView: unknown;\n  table: unknown;\n  webform: unknown;\n  well: unknown;\n  wizard: unknown;\n  wizardHeader: unknown;\n  wizardHeaderClassic: unknown;\n  wizardHeaderVertical: unknown;\n  wizardNav: unknown;\n  alert: unknown;\n  errorsList: unknown;\n}\n\nconst goforms: GoFormsTemplate = {\n  transform(type: string, text: string | number): string {\n    if (!text) {\n      return text as string;\n    }\n    switch (type) {\n      case \"columns\":\n        return Object.prototype.hasOwnProperty.call(columnsMap, text.toString())\n          ? columnsMap[text.toString()]\n          : text.toString();\n      case \"class\":\n        return Object.prototype.hasOwnProperty.call(this.cssClasses, text.toString())\n          ? this.cssClasses[text.toString()]\n          : text.toString();\n    }\n    return text.toString();\n  },\n  defaultIconset: \"icon\",\n  iconClass,\n  cssClasses,\n  builder,\n  builderComponent,\n  builderComponents,\n  builderEditForm,\n  builderPlaceholder,\n  builderSidebar,\n  builderSidebarGroup,\n  builderWizard,\n  button,\n  checkbox,\n  columns,\n  component,\n  datagrid,\n  day,\n  editgrid,\n  field,\n  fieldset,\n  file,\n  icon,\n  input,\n  label,\n  loader,\n  loading,\n  message,\n  multiValueRow,\n  multiValueTable,\n  panel,\n  radio,\n  resourceAdd,\n  select,\n  selectOption,\n  signature,\n  survey,\n  tab,\n  tree,\n  ...treePartials,\n  table,\n  webform,\n  well,\n  wizard,\n  wizardHeader,\n  wizardHeaderClassic,\n  wizardHeaderVertical,\n  wizardNav,\n  alert,\n  errorsList,\n};\n\nexport default goforms;\n","import { Components } from \"@formio/js\";\n\nexport class CustomTextField extends Components.components.textfield {\n  static schema() {\n    return Components.components.textfield.schema();\n  }\n\n  static get builderInfo() {\n    return {\n      title: \"Custom Text Field\",\n      group: \"basic\",\n      icon: \"fa fa-font\",\n      weight: 0,\n      documentation: \"https://formio.github.io/formio.js/app/examples/customcomponents.html\",\n      schema: CustomTextField.schema(),\n    };\n  }\n\n  render() {\n    // You can override the render method to customize the component's appearance\n    return super.render();\n  }\n\n  // Add custom methods and properties here\n}\n","import { Components } from \"@formio/js\";\nimport { CustomTextField } from \"./CustomTextField\";\n\n// Register custom components\nexport const registerCustomComponents = () => {\n  Components.addComponent(\"customtextfield\", CustomTextField);\n};\n\n// Export the components for use in the main application\nexport { Components, CustomTextField };\n","import templates from \"./templates\";\nimport type { Templates } from \"./templates\";\n\ninterface GoForms {\n  framework: string;\n  templates: Templates;\n}\n\nconst goforms: GoForms = {\n  framework: \"goforms\",\n  templates,\n};\n\nexport default goforms;\nexport { goforms };\n\n// For CJS consumers\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports = goforms;\n  module.exports.default = goforms;\n}\n\nexport * from \"./components\";\n"],"names":["builder","ctx","builderComponent","iconClass","html","builderComponents","builderEditForm","builderPlaceholder","builderSidebar","group","builderSidebarGroup","t","subgroups","components","componentKey","component","builderWizard","pages","self","sidebar","form","pageBreadcrumbs","page","pageIndex","button","input","transform","attrs","attr","value","_ctx","checkbox","columns","column","index","cssClasses","datagrid","rows","datagridKey","hasAddButton","hasBottomSubmit","hasHeader","hasExtraColumn","addButtonLocation","addButton","numColumns","tableStyle","header","col","body","row","footer","day","editgrid","field","fieldset","file","key","icon","iconset","name","spinning","icons","label","value$6","loader","value$5","loading","message","multiValueRow","multiValueTable","panel","context","values","ref","item","objValue","radio","value$1","resourceAdd","instance","options","multiple","id","select","selected","option","selectOption","signature","element","width","height","backgroundColor","survey","flat","tab","table","view","content","childNodes","tree","treePartials","webform","well","wizard","wizardHeader","wizardHeaderClassic","wizardHeaderVertical","wizardNav","alert","errorsList","columnsMap","goforms","type","text","CustomTextField","Components","registerCustomComponents","templates"],"mappings":"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"}