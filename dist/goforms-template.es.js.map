{"version":3,"file":"goforms-template.es.js","sources":["../src/templates/goforms/builder/form.ts","../src/templates/goforms/builder/index.ts","../src/templates/goforms/builderComponent/form.ts","../src/templates/goforms/builderComponent/index.ts","../src/templates/goforms/builderComponents/form.ts","../src/templates/goforms/builderComponents/index.ts","../src/templates/goforms/builderEditForm/form.ts","../src/templates/goforms/builderEditForm/index.ts","../src/templates/goforms/builderPlaceholder/form.ts","../src/templates/goforms/builderPlaceholder/index.ts","../src/templates/goforms/builderSidebar/form.ts","../src/templates/goforms/builderSidebar/index.ts","../src/templates/goforms/builderSidebarGroup/form.ts","../src/templates/goforms/builderSidebarGroup/index.ts","../src/templates/goforms/builderWizard/form.ts","../src/templates/goforms/builderWizard/index.ts","../src/templates/goforms/button/form.ts","../src/templates/goforms/button/html.ts","../src/templates/goforms/button/index.ts","../src/templates/goforms/checkbox/form.ts","../src/templates/goforms/checkbox/html.ts","../src/templates/goforms/checkbox/index.ts","../src/templates/goforms/columns/form.ts","../src/templates/goforms/columns/index.ts","../src/templates/goforms/component/form.ts","../src/templates/goforms/component/index.ts","../src/templates/goforms/cssClasses.ts","../src/templates/goforms/datagrid/form.ts","../src/templates/goforms/datagrid/html.ts","../src/templates/goforms/datagrid/index.ts","../src/templates/goforms/day/form.ts","../src/templates/goforms/day/index.ts","../src/templates/goforms/editgrid/form.ts","../src/templates/goforms/editgrid/html.ts","../src/templates/goforms/editgrid/index.ts","../src/templates/goforms/field/form.ts","../src/templates/goforms/field/align.ts","../src/templates/goforms/field/index.ts","../src/templates/goforms/fieldset/form.ts","../src/templates/goforms/fieldset/index.ts","../src/templates/goforms/file/form.ts","../src/templates/goforms/file/index.ts","../src/templates/goforms/icon/form.ts","../src/templates/goforms/icon/index.ts","../src/templates/goforms/iconClass.ts","../src/templates/goforms/input/form.ts","../src/templates/goforms/input/html.ts","../src/templates/goforms/input/index.ts","../src/templates/goforms/label/form.ts","../src/templates/goforms/label/index.ts","../src/templates/goforms/loader/form.ts","../src/templates/goforms/loader/index.ts","../src/templates/goforms/loading/form.ts","../src/templates/goforms/loading/index.ts","../src/templates/goforms/message/form.ts","../src/templates/goforms/message/index.ts","../src/templates/goforms/multiValueRow/form.ts","../src/templates/goforms/multiValueRow/index.ts","../src/templates/goforms/multiValueTable/form.ts","../src/templates/goforms/multiValueTable/index.ts","../src/templates/goforms/panel/form.ts","../src/templates/goforms/panel/index.ts","../src/templates/goforms/radio/form.ts","../src/templates/goforms/radio/html.ts","../src/templates/goforms/radio/index.ts","../src/templates/goforms/resourceAdd/form.ts","../src/templates/goforms/resourceAdd/index.ts","../src/templates/goforms/select/form.ts","../src/templates/goforms/select/html.ts","../src/templates/goforms/select/index.ts","../src/templates/goforms/selectOption/form.ts","../src/templates/goforms/selectOption/html.ts","../src/templates/goforms/selectOption/index.ts","../src/templates/goforms/signature/form.ts","../src/templates/goforms/signature/html.ts","../src/templates/goforms/signature/index.ts","../src/templates/goforms/survey/form.ts","../src/templates/goforms/survey/html.ts","../src/templates/goforms/survey/index.ts","../src/templates/goforms/tab/form.ts","../src/templates/goforms/tab/flat.ts","../src/templates/goforms/tab/index.ts","../src/templates/goforms/table/form.ts","../src/templates/goforms/table/index.ts","../src/templates/goforms/tree/form.ts","../src/templates/goforms/tree/index.ts","../src/templates/goforms/tree/partials/edit.ts","../src/templates/goforms/tree/partials/view.ts","../src/templates/goforms/tree/partials/index.ts","../src/templates/goforms/webform/form.ts","../src/templates/goforms/webform/index.ts","../src/templates/goforms/well/form.ts","../src/templates/goforms/well/index.ts","../src/templates/goforms/wizard/form.ts","../src/templates/goforms/wizard/index.ts","../src/templates/goforms/wizardHeader/form.ts","../src/templates/goforms/wizardHeader/index.ts","../src/templates/goforms/wizardHeaderClassic/form.ts","../src/templates/goforms/wizardHeaderClassic/index.ts","../src/templates/goforms/wizardHeaderVertical/form.ts","../src/templates/goforms/wizardHeaderVertical/index.ts","../src/templates/goforms/wizardNav/form.ts","../src/templates/goforms/wizardNav/index.ts","../src/templates/goforms/alert/form.ts","../src/templates/goforms/alert/index.ts","../src/templates/goforms/errorsList/form.ts","../src/templates/goforms/errorsList/index.ts","../src/templates/goforms/index.ts","../src/templates/index.ts","../src/index.ts"],"sourcesContent":["import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => `\n<div class=\"formio builder ui grid formbuilder\">\n  <div class=\"four wide column formcomponents\">\n    ${ctx.sidebar}\n  </div>\n  <div class=\"twelve wide column formarea\" ref=\"form\">\n    ${ctx.form}\n  </div>\n</div>\n`;\n","import form from \"./form\";\nexport default { form };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const html = ctx.html as string;\n  return `<div class=\"builder-component\" ref=\"dragComponent\">\n    <div class=\"component-btn-group\" data-noattach=\"true\">\n      <div class=\"ui button mini icon primary component-settings-button-edit\" ref=\"editComponent\">\n        <i class=\"${iconClass(\"cog\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon component-settings-button-copy\" ref=\"copyComponent\">\n        <i class=\"${iconClass(\"copy\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon component-settings-button-paste\" ref=\"pasteComponent\">\n        <i class=\"${iconClass(\"save\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon component-settings-button-edit-json\" ref=\"editJson\">\n        <i class=\"${iconClass(\"wrench\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon component-settings-button-move\" ref=\"moveComponent\">\n        <i class=\"${iconClass(\"move\")}\"></i>\n      </div>\n      <div class=\"ui button mini icon secondary component-settings-button-remove\" ref=\"removeComponent\">\n        <i class=\"${iconClass(\"remove\")}\"></i>\n      </div>\n    </div>\n    ${html}\n  </div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (\n  ctx: TemplateContext,\n) => `<div class=\"builder-components drag-container ${ctx.type}\" ref=\"${ctx.key}-container\">\n  ${ctx.html}\n</div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const colWidth = ctx.preview ? \"eight\" : \"sixteen\";\n  return `<div class=\"ui grid\">\n    <div class=\"eight wide column\">\n      <h3 class=\"lead\">${ctx.t(ctx.componentInfo.title)} ${ctx.t(\"Component\")}</h3>\n    </div>\n    <div class=\"eight wide column\">\n      <div class=\"right floated\" style=\"margin-right: 20px; margin-top: 10px\">\n        <a href=\"${ctx.componentInfo.documentation}\" target=\"_blank\">\n          <i class=\"${ctx.iconClass(\"new-window\")}\"> ${ctx.t(\"Help\")}</i>\n        </a>\n      </div>\n    </div>\n  </div>\n  <div class=\"ui grid\">\n    <div class=\"${colWidth} wide column\">\n      <div ref=\"editForm\">\n        ${ctx.editForm}\n      </div>\n      ${\n        !ctx.preview\n          ? `\n      <div style=\"margin-top: 10px;\">\n        <button class=\"ui button primary\" style=\"margin-right: 10px;\" ref=\"saveButton\">${ctx.t(\"Save\")}</button>\n        <button class=\"ui button default\" style=\"margin-right: 10px;\" ref=\"cancelButton\">${ctx.t(\"Cancel\")}</button>\n        <button class=\"ui button negative\" ref=\"removeButton\">${ctx.t(\"Remove\")}</button>\n      </div>\n      `\n          : \"\"\n      }\n    </div>\n    ${\n      ctx.preview\n        ? `\n    <div class=\"eight wide column\">\n      <div class=\"ui top attached block header\">\n        ${ctx.t(\"Preview\")}\n      </div>\n      <div class=\"ui bottom attached segment\" ref=\"preview\">\n        ${ctx.preview}\n      </div>\n      ${\n        ctx.componentInfo.help\n          ? `\n      <div class=\"ui secondary segment formio-settings-help\">\n        ${ctx.componentInfo.help}\n      </div>\n      `\n          : \"\"\n      }\n      <div style=\"margin-top: 10px;\">\n        <button class=\"ui button primary\" style=\"margin-right: 10px;\" ref=\"saveButton\">${ctx.t(\"Save\")}</button>\n        <button class=\"ui button default\" style=\"margin-right: 10px;\" ref=\"cancelButton\">${ctx.t(\"Cancel\")}</button>\n        <button class=\"ui button negative\" ref=\"removeButton\">${ctx.t(\"Remove\")}</button>\n      </div>\n    </div>\n    `\n        : \"\"\n    }\n  </div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => `<div\n  class=\"ui info message no-drag\"\n  style=\"text-align:center; margin-bottom: 5px;\"\n  role=\"alert\"\n  data-noattach=\"true\"\n  data-position=\"${ctx.position}\"\n>\n  Drag and Drop a form component\n</div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (\n  ctx: TemplateContext,\n) => `<div id=\"builder-sidebar-${ctx.id}\" class=\"ui segments\" ref=\"sidebar\">\n  ${ctx.groups.map((group: string) => `${group}`).join(\"\")}\n</div>`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const group = ctx.group as {\n    componentOrder: string[];\n    components: Record<\n      string,\n      { key: string; schema: { type: string }; icon?: string; title: string }\n    >;\n    title: string;\n    default?: boolean;\n  };\n  const t = ctx.t as (s: string) => string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const subgroups = ctx.subgroups as string[];\n\n  const components = group.componentOrder\n    .map((componentKey: string) => {\n      const component = group.components[componentKey];\n      return `<span\n      data-group=\"${ctx.groupKey}\"\n      data-key=\"${component.key}\"\n      data-type=\"${component.schema.type}\"\n      class=\"ui button mini primary fluid formcomponent drag-copy\"\n    >\n      ${component.icon ? `<i class=\"${iconClass(component.icon)}\" style=\"margin-right: 5px;\"></i>` : \"\"}\n      ${t(component.title)}\n    </span>`;\n    })\n    .join(\"\");\n\n  return `<div class=\"ui segment secondary form-builder-panel\" style=\"padding: 0\" ref=\"group-panel-${ctx.groupKey}\">\n    <div class=\"form-builder-group-header\">\n      <h5 class=\"panel-title\">\n        <button\n          class=\"ui button basic fluid builder-group-button\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#group-${ctx.groupKey}\"\n          data-parent=\"${ctx.groupId}\"\n          ref=\"sidebar-anchor\"\n        >\n          ${t(group.title)}\n        </button>\n      </h5>\n    </div>\n  </div>\n  <div class=\"ui segment\" style=\"padding: 0\">\n    <div\n      class=\"panel-collapse collapse ${group.default ? \" in\" : \"\"}\"\n      data-parent=\"#${ctx.groupId}\"\n      data-default=\"${group.default}\"\n      id=\"group-${ctx.groupKey}\"\n      ref=\"sidebar-group\"\n    >\n      <div id=\"group-container-${ctx.groupKey}\" class=\"card-body panel-body no-drop\" ref=\"sidebar-container\">\n        ${components}\n        ${subgroups.join(\"\")}\n      </div>\n    </div>\n  </div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const pages = ctx.pages as Array<{ title: string }>;\n  const self = ctx.self as { page: number };\n  const t = ctx.t as (s: string) => string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const sidebar = ctx.sidebar as string;\n  const form = ctx.form as string;\n\n  const pageBreadcrumbs = pages\n    .map(\n      (page, pageIndex: number) => `\n        <div title=\"${page.title}\" class=\"${pageIndex === self.page ? \"active section\" : \"section\"} wizard-page-label\" ref=\"gotoPage\">${page.title}</div>\n        <div class=\"divider\">/</div>\n      `,\n    )\n    .join(\"\");\n  return `<div class=\"formio builder ui grid formbuilder\">\n    <div class=\"four wide column formcomponents\">\n      ${sidebar}\n    </div>\n    <div class=\"twelve wide column formarea\">\n      <div class=\"ui breadcrumb\" style=\"margin-bottom: 0.5em\">\n        ${pageBreadcrumbs}\n        <div title=\"${t(\"Create Page\")}\" class=\"section wizard-page-label\" ref=\"addPage\"><i class=\"${iconClass(\"plus\")}\"></i> ${t(\"Page\")}</div>\n      </div>\n      <div ref=\"form\">\n        ${form}\n      </div>\n    </div>\n  </div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const input = ctx.input as {\n    type: string;\n    attr?: Record<string, string>;\n    content?: string;\n    labelClass?: string;\n  };\n  const component = ctx.component as {\n    theme?: string;\n    customClass?: string;\n    leftIcon?: string;\n    rightIcon?: string;\n    tooltip?: string;\n  };\n  const transform = ctx.transform as (type: string, value: unknown) => string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n\n  const attrs = Object.entries(input.attr || {})\n    .map(([attr, value]) => `${attr}=\"${value}\"`)\n    .join(\" \");\n  return `<${input.type}\n    ref=\"button\"\n    class=\"ui button ${transform(\"theme\", component.theme)} ${component.customClass || \"\"}\"\n    ${attrs}\n  >\n  ${component.leftIcon ? `<i class=\"${component.leftIcon}\"></i>&nbsp;` : \"\"}\n  ${input.content || \"\"}\n  ${component.tooltip ? `<i ref=\"tooltip\" class=\"${iconClass(\"question-sign\")}\" text-muted\" data-tooltip=\"${component.tooltip}\"></i>` : \"\"}\n  ${component.rightIcon ? `&nbsp;<i class=\"${component.rightIcon}\"></i>` : \"\"}\n  </${input.type}>\n  <div ref=\"buttonMessageContainer\">\n    <span class=\"help-block\" ref=\"buttonMessage\"></span>\n  </div>`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const input = ctx.input as {\n    type: string;\n    attr?: Record<string, string>;\n    content?: string;\n    labelClass?: string;\n    label?: string;\n  };\n  const component = ctx.component as { tooltip?: string };\n  const self = ctx.self as { labelIsHidden: () => boolean };\n  const iconClass = ctx.iconClass as (icon: string) => string;\n\n  const attrs = Object.entries(input.attr || {})\n    .map(([attr, value]) => `${attr}=\"${value}\"`)\n    .join(\" \");\n  return `<div class=\"ui checkbox\">\n    <${input.type}\n      ref=\"input\"\n      id=\"${ctx.id}\"\n      ${attrs}\n      ${ctx.checked ? \"checked=true\" : \"\"}\n    >\n    </${input.type}>\n    <label class=\"${input.labelClass || \"\"}\" for=\"${ctx.id}\">\n      ${input.content || \"\"}\n      ${!self.labelIsHidden() ? `<span>${input.label || \"\"}</span>` : \"\"}\n    </label>\n    ${component.tooltip ? `<i ref=\"tooltip\" class=\"${iconClass(\"question-sign\")} text-muted\" data-tooltip=\"${component.tooltip}\"></i>` : \"\"}\n  </div>`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (\n  ctx: TemplateContext,\n) => `<div class=\"ui grid\" style=\"width: 100%\">\n  ${(ctx.component.columns as Record<string, unknown>[])\n    .map(\n      (column, index: number) => `\n    <div class=\"${ctx.transform(\"columns\", column.width)} wide column\" ref=\"${ctx.columnKey}\">\n      ${ctx.columnComponents[index]}\n    </div>\n  `,\n    )\n    .join(\"\")}\n</div>`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  return `<div id=\"${ctx.id}\" class=\"field ${ctx.classes}\"${ctx.styles ? ` style=\"${ctx.styles}\"` : \"\"} ref=\"component\">\n    ${\n      ctx.visible\n        ? `\n    ${ctx.children}\n    <div ref=\"messageContainer\"></div>\n    `\n        : \"\"\n    }\n  </div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","export default {\n  \"has-error\": \"error\",\n  \"is-invalid\": \"error\",\n  \"formio-tab-panel-active\": \"active\",\n  \"formio-tab-link-active\": \"active\",\n  \"formio-tab-link-container-active\": \"active\",\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  // Type assertions for known structure\n  const component = ctx.component as {\n    layoutFixed?: boolean;\n    reorder?: boolean;\n    striped?: boolean;\n    bordered?: boolean;\n    hover?: boolean;\n    condensed?: boolean;\n    addAnother?: string;\n  };\n  const columns = ctx.columns as Array<{\n    validate?: { required?: boolean };\n    hideLabel?: boolean;\n    label?: string;\n    title?: string;\n    tooltip?: string;\n  }>;\n  const rows = ctx.rows as unknown[];\n  const t = ctx.t as (s: string) => string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const datagridKey = ctx.datagridKey as string;\n  const hasAddButton = !!ctx.hasAddButton;\n  const hasBottomSubmit = !!ctx.hasBottomSubmit;\n  const hasHeader = !!ctx.hasHeader;\n  const hasExtraColumn = !!ctx.hasExtraColumn;\n  const addButtonLocation = ctx.addButtonLocation as string;\n  const addButton = ctx.addButton as string;\n  const numColumns = Number(ctx.numColumns);\n\n  const tableStyle = component.layoutFixed\n    ? 'style=\"table-layout: fixed;\"'\n    : \"\";\n  const header = hasHeader\n    ? `\n    <thead>\n      <tr>\n        ${component.reorder ? \"<th></th>\" : \"\"}\n        ${columns\n          .map(\n            (col) => `\n          <th class=\"${col.validate && col.validate.required ? \"field-required\" : \"\"}\">\n            ${col.hideLabel ? \"\" : t(col.label || col.title || \"\")}\n            ${col.tooltip ? ` <i ref=\"tooltip\" data-title=\"${col.tooltip}\" class=\"${iconClass(\"question-sign\")} text-muted\" data-tooltip=\"${col.tooltip}\"></i>` : \"\"}\n          </th>\n        `,\n          )\n          .join(\"\")}\n        ${\n          hasExtraColumn\n            ? `<th>\n          ${hasAddButton && addButtonLocation === \"header\" ? addButton : \"\"}\n        </th>`\n            : \"\"\n        }\n      </tr>\n    </thead>\n  `\n    : \"\";\n\n  const body = rows\n    .map(\n      (row) => `\n    <tr>${row}</tr>\n  `,\n    )\n    .join(\"\");\n\n  const footer =\n    hasAddButton && hasBottomSubmit\n      ? `\n    <tfoot>\n      <tr>\n        <td colspan=\"${numColumns + 1}\">\n          <button class=\"ui button primary\" ref=\"${datagridKey}-addRow\">\n            <i class=\"${iconClass(\"plus\")}\"></i> ${t(component.addAnother || \"Add Another\")}\n          </button>\n        </td>\n      </tr>\n    </tfoot>\n  `\n      : \"\";\n\n  return `<table class=\"ui table datagrid-table\n    ${component.striped ? \"striped\" : \"\"}\n    ${component.bordered ? \"celled\" : \"\"}\n    ${component.hover ? \"selectable\" : \"\"}\n    ${component.condensed ? \"compact\" : \"padded\"}\n    \" ${tableStyle}>\n    ${header}\n    <tbody ref=\"${datagridKey}-tbody\">\n      ${body}\n    </tbody>\n    ${footer}\n  </table>`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const component = ctx.component as { key: string };\n  const t = ctx.t as (s: string) => string;\n  return `<div class=\"ui grid\">\n    ${\n      ctx.dayFirst && ctx.showDay\n        ? `\n      <div class=\"four wide column\">\n        <label for=\"${component.key}-day\" class=\"\">${t(\"Day\")}</label>\n        ${ctx.day}\n      </div>\n    `\n        : \"\"\n    }\n    ${\n      ctx.showMonth\n        ? `\n      <div class=\"five wide column\">\n        <label for=\"${component.key}-month\" class=\"\">${t(\"Month\")}</label>\n        ${ctx.month}\n      </div>\n    `\n        : \"\"\n    }\n    ${\n      !ctx.dayFirst && ctx.showDay\n        ? `\n      <div class=\"four wide column\">\n        <label for=\"${component.key}-day\" class=\"\">${t(\"Day\")}</label>\n        ${ctx.day}\n      </div>\n    `\n        : \"\"\n    }\n    ${\n      ctx.showYear\n        ? `\n      <div class=\"seven wide column\">\n        <label for=\"${component.key}-year\" class=\"\">${t(\"Year\")}</label>\n        ${ctx.year}\n      </div>\n    `\n        : \"\"\n    }\n  </div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const t = ctx.t as (s: string) => string;\n  const ref = ctx.ref as {\n    row: string;\n    saveRow: string;\n    cancelRow: string;\n    addRow: string;\n  };\n  const openRows = ctx.openRows as boolean[];\n  const readOnly = !!ctx.readOnly;\n  const component = ctx.component as { saveRow?: string; removeRow?: string };\n  const rows = ctx.rows as string[];\n  const header = ctx.header as string;\n  const preview = ctx.preview as string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const addAnother = ctx.addAnother as string;\n\n  const rowsHtml = rows\n    .map(\n      (row, rowIndex) => `\n    <div class=\"item\" ref=\"${ref.row}\">\n      ${row}\n      ${\n        openRows[rowIndex] && !readOnly\n          ? `\n        <div class=\"editgrid-actions\">\n          <button class=\"ui button primary\" ref=\"${ref.saveRow}\">${t(component.saveRow || \"Save\")}</button>\n          ${component.removeRow ? `<button class=\"ui button secondary\" ref=\"${ref.cancelRow}\">${t(component.removeRow || \"Cancel\")}</button>` : \"\"}\n        </div>\n      `\n          : \"\"\n      }\n      <div class=\"has-error\">\n        <div class=\"editgrid-row-error help-block\">\n          ${ctx.errors[rowIndex]}\n        </div>\n      </div>\n    </div>\n  `,\n    )\n    .join(\"\");\n\n  const footer = ctx.footer\n    ? `\n    <div class=\"item list-group-footer\">\n      ${ctx.footer}\n    </div>\n  `\n    : \"\";\n\n  const addButton =\n    !readOnly && ctx.hasAddButton\n      ? `\n    <button class=\"ui button primary\" ref=\"${ref.addRow}\">\n      <i class=\"${iconClass(\"plus\")}\"></i> ${addAnother || t(\"Add Another\")}\n    </button>\n  `\n      : \"\";\n\n  return `<div class=\"editgrid-listgroup ui celled list\">\n    ${header ? `<div class=\"item list-group-header\">${header}</div>` : \"\"}\n    ${rowsHtml}\n    ${footer}\n  </div>\n  ${addButton}\n  ${preview ? `<div class=\"ui segment\" ref=\"preview\">${preview}</div>` : \"\"}`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nimport align from \"./align\";\n\nexport default { form: value, align };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const icon = ctx.icon as string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  return `<i class=\"${iconClass(icon)}\"></i>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","export default (iconset, name, spinning) => {\n  const icons = {\n    \"plus-squre-o\": \"plus square outline\",\n    \"minus-squre-o\": \"minus square outline\",\n    \"question-sign\": \"question circle\",\n    \"remove-circle\": \"trash alternate outline\",\n    \"new-window\": \"external alternate\",\n    \"files-o\": \"file outline\",\n    move: \"arrows alternate\",\n    link: \"linkify\",\n  };\n  if (Object.prototype.hasOwnProperty.call(icons, name)) {\n    name = icons[name];\n  }\n  name = name || \"\";\n  name = name.replace(/-/g, \" \");\n  name = name.replace(/ o$/, \" outline\");\n  return spinning ? `icon ${name} loading` : `icon ${name}`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default function (_ctx: TemplateContext) {\n  return `<div class=\"formio-loader\">\n    <div class=\"loader-wrapper\">\n      <div class=\"ui active centered inline loader\"></div>\n    </div>\n  </div>\n  `;\n}\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default function (_ctx: TemplateContext) {\n  return \"\";\n}\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (\n  ctx: TemplateContext,\n) => `<div class=\"ui pointing red basic label ${ctx.level}\">\n  ${ctx.message}\n</div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\ntype RadioItem = {\n  value: string;\n  label: string;\n  disabled?: boolean;\n};\n\nexport default (ctx: TemplateContext) => {\n  const input = ctx.input as { attr?: Record<string, string>; type?: string };\n  const instance = ctx.instance as { root?: { id?: string } };\n  return `<div class=\"fields ${ctx.inline ? \"inline\" : \"grouped\"}\">\n    ${\n      Array.isArray(ctx.values)\n        ? ctx.values\n            .map(\n              (item: RadioItem) => `\n      <div class=\"field\">\n        <div class=\"ui ${input?.attr?.type === \"radio\" ? \"radio\" : \"\"} checkbox\" ref=\"wrapper\">\n          <${input?.type}\n            ref=\"input\"\n            ${Object.entries(input?.attr || {})\n              .map(([attr, val]) => `${attr}=\"${val}\"`)\n              .join(\" \")}\n            value=\"${item.value}\"\n            ${ctx.value === item.value || (typeof ctx.value === \"object\" && ctx.value && Object.prototype.hasOwnProperty.call(ctx.value, item.value) && ctx.value[item.value]) ? \"checked\" : \"\"}\n            ${item.disabled ? \"disabled\" : \"\"}\n            id=\"${instance?.root?.id}-${ctx.id}-${ctx.row}-${item.value}\"\n          >\n          <label class=\"\" for=\"${instance?.root?.id}-${ctx.id}-${ctx.row}-${item.value}\">\n            <span>${ctx.t ? (ctx.t as (s: string) => string)(item.label) : item.label}</span>\n          </label>\n        </div>\n      </div>\n    `,\n            )\n            .join(\"\")\n        : \"\"\n    }\n  </div>`;\n};\n","import { TemplateContext } from \"../types\";\n\ntype RadioItem = {\n  value: string;\n  label: string;\n};\n\nexport default (ctx: TemplateContext) => {\n  const filtered = Array.isArray(ctx.values)\n    ? ctx.values\n        .filter(\n          (item: RadioItem) =>\n            ctx.value === item.value ||\n            (typeof ctx.value === \"object\" &&\n              ctx.value &&\n              Object.prototype.hasOwnProperty.call(ctx.value, item.value) &&\n              ctx.value[item.value]),\n        )\n        .map((item: RadioItem) =>\n          ctx.t ? (ctx.t as (s: string) => string)(item.label) : item.label,\n        )\n        .join(\", \")\n    : \"\";\n  return `<div ref=\"value\">\n    ${filtered}\n  </div>`;\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default function (ctx: TemplateContext) {\n  const t = ctx.t as (s: string) => string;\n  const iconClass = ctx.iconClass as (s: string) => string;\n  const component = ctx.component as { addResourceLabel?: string };\n  return `<table class=\"ui table celled\">\n    <tbody>\n      <tr>\n        <td>\n          ${ctx.element}\n        </td>\n      </tr>\n      <tr>\n        <td colspan=\"2\">\n          <button class=\"ui button primary\" ref=\"addResource\">\n            <i class=\"${iconClass(\"plus\")}\"></i>\n            ${t(component.addResourceLabel || \"Add Resource\")}\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  `;\n}\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const input = ctx.input as {\n    ref?: string;\n    multiple?: boolean;\n    attr?: Record<string, string>;\n  };\n  const instance = ctx.instance as { id?: string };\n  const component = ctx.component as { key?: string };\n  const selectAttrs = input?.attr || {};\n  const selectId =\n    !selectAttrs.id && instance?.id && component?.key\n      ? `id=\"${instance.id}-${component.key}\"`\n      : \"\";\n  const selectAttrString = Object.entries(selectAttrs)\n    .map(([attr, val]) => `${attr}=\"${val}\"`)\n    .join(\" \");\n  const autocomplete = selectAttrs.autocomplete\n    ? `autocomplete=\"${selectAttrs.autocomplete}\"`\n    : \"\";\n  return `<select\n    ref=\"${input?.ref ? input.ref : \"selectContainer\"}\"\n    class=\"ui search dropdown\"\n    ${input?.multiple ? \"multiple\" : \"\"}\n    ${selectAttrString}\n    ${selectId}\n  >${ctx.selectOptions}</select>\n  <input type=\"text\"\n         class=\"formio-select-autocomplete-input\"\n         ref=\"autocompleteInput\"\n         ${autocomplete}\n         tabindex=\"-1\"\n  />`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const self = ctx.self as { itemValueForHTMLMode: (v: unknown) => string };\n  const value = ctx.value ? self.itemValueForHTMLMode(ctx.value) : \"-\";\n  return `<div ref=\"value\">${value}</div>`;\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const attrs = ctx.attrs as Record<string, string>;\n  const option = ctx.option as { value: string; label: string };\n  const attrString = Object.entries(attrs || {})\n    .map(([attr, val]) => `${attr}=\"${val}\"`)\n    .join(\" \");\n  const selected = ctx.selected ? 'selected=\"selected\"' : \"\";\n  return `<option ${selected} value='${option.value}' ${attrString}>\n    ${ctx.t ? (ctx.t as (s: string) => string)(option.label) : option.label}\n  </option>`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const option = ctx.option as { label: string };\n  const label = ctx.selected\n    ? ctx.t\n      ? (ctx.t as (s: string) => string)(option.label)\n      : option.label\n    : \"\";\n  return `${label}`;\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const component = ctx.component as {\n    width?: string;\n    height?: string;\n    tabindex?: number;\n    footer?: string;\n  };\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const t = ctx.t as (s: string) => string;\n  const required = ctx.required\n    ? `<span class=\"form-control-feedback field-required-inline text-danger\">\n        <i class=\"${iconClass(\"asterisk\")}\"></i>\n      </span>`\n    : \"\";\n  const footer = component.footer\n    ? `<div class=\"signature-pad-footer\">\n        ${t(component.footer)}\n      </div>`\n    : \"\";\n  return `${ctx.element}\n<div\n  class=\"signature-pad-body\"\n  style=\"width: ${component.width};height: ${component.height};padding:0;margin:0;\"\n  tabindex=\"${component.tabindex || 0}\"\n  ref=\"padBody\"\n>\n  <a class=\"ui basic button mini icon signature-pad-refresh\" ref=\"refresh\">\n    <i class=\"${iconClass(\"refresh\")}\"></i>\n  </a>\n  <canvas class=\"signature-pad-canvas\" height=\"${component.height}\" ref=\"canvas\"></canvas>\n  ${required}\n  <img style=\"width: 100%;display: none;\" ref=\"signatureImage\">\n</div>\n${footer}`;\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (\n  _ctx: TemplateContext,\n) => `<img style=\"width: 100%;\" ref=\"signatureImage\">\n`;\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\ntype SurveyValue = { value: string; label: string };\ntype SurveyQuestion = { value: string; label: string };\n\nexport default (ctx: TemplateContext) => {\n  const component = ctx.component as {\n    values: SurveyValue[];\n    questions: SurveyQuestion[];\n  };\n  const t = ctx.t as (s: string) => string;\n  const self = ctx.self as { getInputName: (q: SurveyQuestion) => string };\n  return `<table class=\"ui table striped celled\">\n    <thead>\n      <tr>\n        <th></th>\n        ${component.values.map((value) => `<th style=\"text-align: center;\">${t(value.label)}</th>`).join(\"\")}\n      </tr>\n    </thead>\n    <tbody>\n      ${component.questions\n        .map(\n          (question) => `\n        <tr>\n          <td>${t(question.label)}</td>\n          ${component.values\n            .map(\n              (value) => `\n            <td style=\"text-align: center;\">\n              <input type=\"radio\" name=\"${self.getInputName(question)}\" value=\"${value.value}\" id=\"${ctx.key}-${question.value}-${value.value}\" ref=\"input\">\n            </td>\n          `,\n            )\n            .join(\"\")}\n        </tr>\n      `,\n        )\n        .join(\"\")}\n    </tbody>\n  </table>`;\n};\n","import { TemplateContext } from \"../types\";\n\ntype SurveyValue = { value: string; label: string };\ntype SurveyQuestion = { value: string; label: string };\n\nexport default (ctx: TemplateContext) => {\n  const component = ctx.component as {\n    values: SurveyValue[];\n    questions: SurveyQuestion[];\n  };\n  const t = ctx.t as (s: string) => string;\n  const value = ctx.value as Record<string, string>;\n  return `<table class=\"ui table striped celled\">\n    <tbody>\n      ${component.questions\n        .map(\n          (question) => `\n        <tr>\n          <th>${t(question.label)}</th>\n          <td>\n            ${component.values\n              .map((item) =>\n                value &&\n                Object.prototype.hasOwnProperty.call(value, question.value) &&\n                value[question.value] === item.value\n                  ? t(item.label)\n                  : \"\",\n              )\n              .join(\"\")}\n          </td>\n        </tr>\n      `,\n        )\n        .join(\"\")}\n    </tbody>\n  </table>`;\n};\n","import value from \"./form\";\nimport html from \"./html\";\n\nexport default { form: value, html };\n","import { TemplateContext } from \"../types\";\n\ntype TabComponent = { label: string };\n\nexport default (ctx: TemplateContext) => {\n  const component = ctx.component as {\n    components: TabComponent[];\n    verticalLayout?: boolean;\n  };\n  const t = ctx.t as (s: string) => string;\n  const tabLinks = component.components\n    .map(\n      (tab, index) =>\n        `<a class=\"item${ctx.currentTab === index ? \" active\" : \"\"}\" role=\"presentation\" ref=\"${ctx.tabLinkKey}\">${t(tab.label)}</a>`,\n    )\n    .join(\"\");\n  const tabPanels = component.components\n    .map(\n      (tab, index) =>\n        `<div role=\"tabpanel\" class=\"ui bottom attached tab segment${ctx.currentTab === index ? \" active\" : \"\"}\" ref=\"${ctx.tabKey}\">${ctx.tabComponents[index]}</div>`,\n    )\n    .join(\"\");\n  return `<div class=\"tab-container${component.verticalLayout ? \" card-vertical\" : \"\"}\">\n    <div class=\"ui top attached tabular menu${component.verticalLayout ? \" nav-tabs-vertical\" : \"\"}\">\n      ${tabLinks}\n    </div>\n    ${tabPanels}\n  </div>`;\n};\n","import { TemplateContext } from \"../types\";\n\ntype TabComponent = { label: string };\n\nexport default (ctx: TemplateContext) => {\n  const component = ctx.component as { components: TabComponent[] };\n  const t = ctx.t as (s: string) => string;\n  return component.components\n    .map(\n      (tab, index) => `\n        <h4 class=\"ui top attached block header\">${t(tab.label)}</h4>\n        <div class=\"ui bottom attached segment\">\n          ${ctx.tabComponents[index]}\n        </div>\n      `,\n    )\n    .join(\"\");\n};\n","import value from \"./form\";\nimport flat from \"./flat\";\n\nexport default { form: value, flat };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const component = ctx.component as {\n    striped?: boolean;\n    bordered?: boolean;\n    hover?: boolean;\n    condensed?: boolean;\n    header?: string[];\n  };\n  const t = ctx.t as (s: string) => string;\n  const tableComponents = ctx.tableComponents as unknown[][];\n  const cellClassName = ctx.cellClassName as string | undefined;\n  const tableKey = ctx.tableKey as string | undefined;\n  const rowIndex = ctx.rowIndex as number | undefined;\n  const id = ctx.id as string | undefined;\n\n  const headerHtml =\n    component.header && component.header.length > 0\n      ? `<thead><tr>${component.header.map((header) => `<th>${t(header)}</th>`).join(\"\")}</tr></thead>`\n      : \"\";\n\n  const bodyHtml = tableComponents\n    .map(\n      (row, _rowIdx) =>\n        `<tr ref=\"row-${id}\">\n        ${row\n          .map(\n            (column, _colIdx) =>\n              `<td ref=\"${tableKey}-${rowIndex}\"${cellClassName ? ` class=\"${cellClassName}\"` : \"\"}>${column}</td>`,\n          )\n          .join(\"\")}\n      </tr>`,\n    )\n    .join(\"\");\n\n  return `<table class=\"ui table\n    ${component.striped ? \"striped\" : \"\"}\n    ${component.bordered ? \"celled\" : \"\"}\n    ${component.hover ? \"selectable\" : \"\"}\n    ${component.condensed ? \"compact\" : \"padded\"}\n  \">\n  ${headerHtml}\n  <tbody>\n    ${bodyHtml}\n  </tbody>\n</table>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const node = ctx.node as { isRoot?: boolean };\n  const content = ctx.content as string | undefined;\n  const childNodes = ctx.childNodes as string[] | undefined;\n  let html = \"\";\n  if (node.isRoot) {\n    html += `<div class=\"ui relaxed list\">\n      <div class=\"item\" ref=\"root\" role=\"listitem\">`;\n  } else {\n    html += `<div ref=\"node\" class=\"item tree__level\" role=\"listitem\">`;\n  }\n  if (content) {\n    html += `<div ref=\"content\" class=\"tree__node-content content\">\n      ${content}\n    </div>`;\n  }\n  if (childNodes && childNodes.length) {\n    html += `<div ref=\"childNodes\" class=\"tree__node-children list\" role=\"list\">\n      ${childNodes.join(\"\")}\n    </div>`;\n  }\n  if (node.isRoot) {\n    html += `</div></div>`;\n  } else {\n    html += `</div>`;\n  }\n  return html;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../../types\";\n\nexport default (ctx: TemplateContext) => {\n  const t = ctx.t as (s: string) => string;\n  const children = ctx.children as string | undefined;\n  const readOnly = ctx.readOnly as boolean | undefined;\n  const actions = !readOnly\n    ? `<div class=\"node-actions\">\n        <button ref=\"saveNode\" class=\"ui mini primary button saveNode\">${t(\"Save\")}</button>\n        <button ref=\"cancelNode\" class=\"ui mini negative button cancelNode\">${t(\"Cancel\")}</button>\n      </div>`\n    : \"\";\n  return `<div class=\"node-edit\">\n    <div ref=\"nodeEdit\">${children}</div>\n    ${actions}\n  </div>`;\n};\n","import { TemplateContext } from \"../../types\";\n\nexport default (ctx: TemplateContext) => {\n  const t = ctx.t as (s: string) => string;\n  const values = ctx.values as string[];\n  const node = ctx.node as {\n    hasChildren?: boolean;\n    collapsed?: boolean;\n    revertAvailable?: boolean;\n  };\n  const readOnly = ctx.readOnly as boolean | undefined;\n  let buttons = \"\";\n  if (node.hasChildren) {\n    buttons += `<button ref=\"toggleNode\" class=\"ui button toggleNode\">${t(node.collapsed ? \"Expand\" : \"Collapse\")}</button><div class=\"or\"></div>`;\n  }\n  if (!readOnly) {\n    buttons += `<button ref=\"addChild\" class=\"ui button primary addChild\">${t(\"Add\")}</button><div class=\"or\"></div>`;\n    buttons += `<button ref=\"editNode\" class=\"ui button editNode\">${t(\"Edit\")}</button><div class=\"or\"></div>`;\n    buttons += `<button ref=\"removeNode\" class=\"ui button negative removeNode\">${t(\"Delete\")}</button>`;\n    if (node.revertAvailable) {\n      buttons += `<div class=\"or\"></div><button ref=\"revertNode\" class=\"ui button negative revertNode\">${t(\"Revert\")}</button>`;\n    }\n  }\n  return `<div class=\"ui grid\">\n    <div class=\"row\">\n      ${values.map((value) => `<div class=\"two wide column\">${value}</div>`).join(\"\")}\n      <div class=\"five wide column\">\n        <div class=\"ui mini right floated buttons\">\n          ${buttons}\n        </div>\n      </div>\n    </div>\n  </div>`;\n};\n","import edit from \"./edit\";\nimport view from \"./view\";\n\nexport default {\n  treeView: {\n    form: view,\n  },\n  treeEdit: {\n    form: edit,\n  },\n};\n","import { TemplateContext } from \"../types\";\n\nexport default (\n  ctx: TemplateContext,\n) => `<div class=\"${ctx.classes} ui form\" ref=\"webform\" novalidate>${ctx.children}</div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => `<div class=\"ui secondary segment\">\n  <div class=\"content\" ref=\"${ctx.nestedKey}\">\n    ${ctx.children}\n  </div>\n</div>\n`;\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const className = ctx.className as string;\n  const wizardHeaderType = ctx.wizardHeaderType as string;\n  const wizardHeader = ctx.wizardHeader as string;\n  const wizardKey = ctx.wizardKey as string;\n  const components = ctx.components as string;\n  const wizardNav = ctx.wizardNav as string;\n  let content = \"\";\n  if (wizardHeaderType === \"wizardHeaderVertical\") {\n    content = `\n      <div class=\"ui stackable grid\">\n        <div class=\"three wide computer sixteen wide tablet sixteen wide mobile column\">\n          ${wizardHeader}\n        </div>\n        <div class=\"one wide computer one wide mobile one wide tablet column\"></div>\n        <div class=\"wizard-page ten wide computer fourteen wide tablet fourteen wide mobiles column\" ref=\"${wizardKey}\">\n          ${components}\n        </div>\n      </div>\n      <div class=\"ui grid\" style=\"margin-top: 10px;\">\n        <div class=\"four wide column\"></div>\n        <div class=\"twelve wide column\">\n          ${wizardNav}\n        </div>\n      </div>\n    `;\n  } else {\n    content = `\n      ${wizardHeader}\n      <div class=\"wizard-page\" ref=\"${wizardKey}\">\n        ${components}\n      </div>\n      ${wizardNav}\n    `;\n  }\n  return `<div class=\"${className}\">\n    <div style=\"position: relative;\">\n      ${content}\n    </div>\n  </div>`;\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const wizardKey = ctx.wizardKey as string;\n  const panels = ctx.panels as { title: string; tooltip?: boolean }[];\n  const currentPage = ctx.currentPage as number;\n  const wizardPageTooltip = ctx.wizardPageTooltip as string;\n  const iconClass = ctx.iconClass as (icon: string) => string;\n  const steps = panels\n    .map((panel, index) => {\n      const tooltip =\n        panel.tooltip && currentPage === index\n          ? `<span data-tooltip=\"${wizardPageTooltip}\" data-position=\"right center\">\n            <i class=\"${iconClass(\"question-sign\")}\"></i>\n          </span>`\n          : \"\";\n      return `<a class=\"${currentPage === index ? \" active\" : \"\"} step\" ref=\"${wizardKey}-link\">\n        <div class=\"content\">\n          <div class=\"title\">\n            ${panel.title}\n            ${tooltip}\n          </div>\n        </div>\n      </a>`;\n    })\n    .join(\"\");\n  return `<nav aria-label=\"navigation\" id=\"${wizardKey}-header\" ref=\"${wizardKey}-header\">\n    <div class=\"ui steps\">\n      ${steps}\n    </div>\n  </nav>`;\n};\n","import value from \"./form\";\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const wizardKey = ctx.wizardKey as string;\n  const panels = ctx.panels as { title: string }[];\n  const currentPage = ctx.currentPage as number;\n  const t = ctx.t as (s: string, opts?: Record<string, unknown>) => string;\n  const panelHtml = panels\n    .map((panel, index) => {\n      const progress =\n        panels.length > 1\n          ? `<div class=\"classic-pagination-progress\" style=\"border-radius: 0;\"><div class=\"classic-pagination-progress-bar\"></div></div>`\n          : \"\";\n      return `<div class=\"classic-pagination-page four wide computer eight wide tablet sixteen wide mobile column\n          ${currentPage < index ? \" disabled\" : \"\"}\n          ${currentPage === index ? \" active\" : \"\"}\n          ${currentPage > index ? \" complete\" : \"\"}\" style=\"padding: 0;\">\n        <div class=\"ui center aligned header classic-pagination-title\">${t(panel.title, { _userInput: true })}</div>\n        ${progress}\n        <span ref=\"${wizardKey}-link\" class=\"classic-pagination-dot\" style=\"top: 45px;\"></span>\n      </div>`;\n    })\n    .join(\"\");\n  return `<nav aria-label=\"navigation\" id=\"${wizardKey}-header\">\n    <div class=\" ui stackable grid\" style=\"border-bottom:0;\">\n      ${panelHtml}\n    </div>\n  </nav>`;\n};\n","import value from \"./form\";\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\ntype Panel = { title: string; tooltip?: string };\n\nexport default (ctx: TemplateContext) => {\n  const panels = (ctx.panels as Panel[]).map(\n    (panel, index: number) => `\n    <li class=\"item page-item${ctx.currentPage === index ? \" active\" : \"\"}\" style=\"cursor: pointer;\">\n      <span class=\"page-link\" ref=\"${ctx.wizardKey}-link\" style=\"margin-left: 0px;\">\n        ${(ctx.t as (s: string, opts?: Record<string, unknown>) => string)(panel.title, { _userInput: true })}\n        ${\n          panel.tooltip && ctx.currentPage === index\n            ? `<i ref=\"${ctx.wizardKey}-tooltip\" class=\"${(ctx.iconClass as (icon: string) => string)(\"question-sign\")} text-muted\" data-tooltip=\"${panel.tooltip}\"></i>`\n            : \"\"\n        }\n      </span>\n    </li>\n  `,\n  );\n  return `<nav aria-label=\"navigation\" id=\"${ctx.wizardKey}-header\">\n  <ul class=\"ui vertical fluid tabular menu\">\n    ${panels.join(\"\")}\n  </ul>\n</nav>`;\n};\n","import value from \"./form\";\nexport default { form: value };\n","import { TemplateContext } from \"../types\";\n\nexport default (ctx: TemplateContext) => {\n  const buttons = ctx.buttons as {\n    cancel?: boolean;\n    previous?: boolean;\n    next?: boolean;\n    submit?: boolean;\n  };\n  const wizardKey = ctx.wizardKey as string;\n  const t = ctx.t as (s: string) => string;\n  const cancelButton = buttons.cancel\n    ? `<div class=\"item\">\n    <button class=\"ui button secondary btn-wizard-nav-cancel\" ref=\"${wizardKey}-cancel\">${t(\"cancel\")}</button>\n  </div>`\n    : \"\";\n  const previousButton = buttons.previous\n    ? `<div class=\"item\">\n    <button class=\"ui button primary btn-wizard-nav-previous\" ref=\"${wizardKey}-previous\">${t(\"previous\")}</button>\n  </div>`\n    : \"\";\n  const nextButton = buttons.next\n    ? `<div class=\"item\">\n    <button class=\"ui button primary btn-wizard-nav-next\" ref=\"${wizardKey}-next\">${t(\"next\")}</button>\n  </div>`\n    : \"\";\n  const submitButton = buttons.submit\n    ? `<div class=\"item\">\n    <button class=\"ui button primary btn-wizard-nav-submit\" ref=\"${wizardKey}-submit\">${t(\"submit\")}</button>\n  </div>`\n    : \"\";\n  return `<div class=\"ui horizontal list\" id=\"${wizardKey}-nav\">\n  ${cancelButton}\n  ${previousButton}\n  ${nextButton}\n  ${submitButton}\n  </div>`;\n};\n","import value from \"./form\";\nexport default { form: value };\n","export interface AlertTemplateContext {\n  attrs: Record<string, string>;\n  message: string;\n}\n\nexport default (ctx: AlertTemplateContext) => {\n  let attrs = \"\";\n  for (const attr in ctx.attrs) {\n    if (attr === \"class\") {\n      attrs += `${attr}=\"ui message ${ctx.attrs[attr]}\" `;\n    } else {\n      attrs += `${attr}=\"${ctx.attrs[attr]}\" `;\n    }\n  }\n  return `<div ${attrs.trim()}>${ctx.message}</div>`;\n};\n","import form from \"./form\";\n\nexport default { form };\n","import { TemplateContext } from \"../types\";\n\nexport default (_ctx: TemplateContext) => {\n  return \"\";\n};\n","import value from \"./form\";\n\nexport default { form: value };\n","import builder from \"./builder\";\nimport builderComponent from \"./builderComponent\";\nimport builderComponents from \"./builderComponents\";\nimport builderEditForm from \"./builderEditForm\";\nimport builderPlaceholder from \"./builderPlaceholder\";\nimport builderSidebar from \"./builderSidebar\";\nimport builderSidebarGroup from \"./builderSidebarGroup\";\nimport builderWizard from \"./builderWizard\";\nimport button from \"./button\";\nimport checkbox from \"./checkbox\";\nimport columns from \"./columns\";\nimport component from \"./component\";\nimport cssClasses from \"./cssClasses\";\nimport datagrid from \"./datagrid\";\nimport day from \"./day\";\nimport editgrid from \"./editgrid\";\nimport field from \"./field\";\nimport fieldset from \"./fieldset\";\nimport file from \"./file\";\nimport icon from \"./icon\";\nimport iconClass from \"./iconClass\";\nimport input from \"./input\";\nimport label from \"./label\";\nimport loader from \"./loader\";\nimport loading from \"./loading\";\nimport message from \"./message\";\nimport multiValueRow from \"./multiValueRow\";\nimport multiValueTable from \"./multiValueTable\";\nimport panel from \"./panel\";\nimport radio from \"./radio\";\nimport resourceAdd from \"./resourceAdd\";\nimport select from \"./select\";\nimport selectOption from \"./selectOption\";\nimport signature from \"./signature\";\nimport survey from \"./survey\";\nimport tab from \"./tab\";\nimport table from \"./table\";\nimport tree from \"./tree\";\nimport treePartials from \"./tree/partials\";\nimport webform from \"./webform\";\nimport well from \"./well\";\nimport wizard from \"./wizard\";\nimport wizardHeader from \"./wizardHeader\";\nimport wizardHeaderClassic from \"./wizardHeaderClassic\";\nimport wizardHeaderVertical from \"./wizardHeaderVertical\";\nimport wizardNav from \"./wizardNav\";\nimport alert from \"./alert\";\nimport errorsList from \"./errorsList\";\n\nexport default {\n  transform(type, text) {\n    if (!text) {\n      return text;\n    }\n    const columns = {\n      1: \"one\",\n      2: \"two\",\n      3: \"three\",\n      4: \"four\",\n      5: \"five\",\n      6: \"six\",\n      7: \"seven\",\n      8: \"eight\",\n      9: \"nine\",\n      10: \"ten\",\n      11: \"eleven\",\n      12: \"twelve\",\n      13: \"thirteen\",\n      14: \"fourteen\",\n      15: \"fifteen\",\n      16: \"sixteen\",\n    };\n    switch (type) {\n      case \"columns\":\n        return Object.prototype.hasOwnProperty.call(columns, text.toString())\n          ? columns[text.toString()]\n          : text;\n      case \"class\":\n        return Object.prototype.hasOwnProperty.call(\n          this.cssClasses,\n          text.toString(),\n        )\n          ? this.cssClasses[text.toString()]\n          : text;\n    }\n    return text;\n  },\n  defaultIconset: \"icon\",\n  iconClass,\n  cssClasses,\n  builder,\n  builderComponent,\n  builderComponents,\n  builderEditForm,\n  builderPlaceholder,\n  builderSidebar,\n  builderSidebarGroup,\n  builderWizard,\n  button,\n  checkbox,\n  columns,\n  component,\n  datagrid,\n  day,\n  editgrid,\n  field,\n  fieldset,\n  file,\n  icon,\n  input,\n  label,\n  loader,\n  loading,\n  message,\n  multiValueRow,\n  multiValueTable,\n  panel,\n  radio,\n  resourceAdd,\n  select,\n  selectOption,\n  signature,\n  survey,\n  tab,\n  tree,\n  ...treePartials,\n  table,\n  webform,\n  well,\n  wizard,\n  wizardHeader,\n  wizardHeaderClassic,\n  wizardHeaderVertical,\n  wizardNav,\n  alert,\n  errorsList,\n};\n","import goforms from \"./goforms\";\n\nexport default {\n  goforms,\n};\n","import templates from \"./templates\";\n\nconst goforms = {\n  framework: \"goforms\",\n  templates,\n};\n\nexport default goforms;\nexport { goforms };\n\n// For CJS consumers (optional, but robust)\n// @ts-expect-error: CJS export for Node consumers\nif (typeof module !== \"undefined\") {\n  // @ts-expect-error: CJS export for Node consumers\n  module.exports = goforms;\n}\n"],"names":["form","iconClass","html","value","component","input","columns","icon","label","tab","wizardHeader","wizardNav","panel","goforms"],"mappings":"AAEA,MAAe,SAAA,CAAC,QAAyB;AAAA;AAAA;AAAA,MAGnC,IAAI,OAAO;AAAA;AAAA;AAAA,MAGX,IAAI,IAAI;AAAA;AAAA;AAAA;ACPd,MAAe,UAAA,EAAA,MAAEA,OAAK;ACCtB,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAMC,aAAY,IAAI;AACtB,QAAMC,QAAO,IAAI;AACV,SAAA;AAAA;AAAA;AAAA,oBAGWD,WAAU,KAAK,CAAC;AAAA;AAAA;AAAA,oBAGhBA,WAAU,MAAM,CAAC;AAAA;AAAA;AAAA,oBAGjBA,WAAU,MAAM,CAAC;AAAA;AAAA;AAAA,oBAGjBA,WAAU,QAAQ,CAAC;AAAA;AAAA;AAAA,oBAGnBA,WAAU,MAAM,CAAC;AAAA;AAAA;AAAA,oBAGjBA,WAAU,QAAQ,CAAC;AAAA;AAAA;AAAA,MAGjCC,KAAI;AAAA;AAEV;AC1BA,MAAA,mBAAe,EAAE,MAAMC,QAAM;ACA7B,MAAA,UAAe,CACb,QACG,iDAAiD,IAAI,IAAI,UAAU,IAAI,GAAG;AAAA,IAC3E,IAAI,IAAI;AAAA;AAAA;ACHZ,MAAA,oBAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AACjC,QAAA,WAAW,IAAI,UAAU,UAAU;AAClC,SAAA;AAAA;AAAA,yBAEgB,IAAI,EAAE,IAAI,cAAc,KAAK,CAAC,IAAI,IAAI,EAAE,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA,mBAI1D,IAAI,cAAc,aAAa;AAAA,sBAC5B,IAAI,UAAU,YAAY,CAAC,MAAM,IAAI,EAAE,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMlD,QAAQ;AAAA;AAAA,UAEhB,IAAI,QAAQ;AAAA;AAAA,QAGd,CAAC,IAAI,UACD;AAAA;AAAA,yFAE6E,IAAI,EAAE,MAAM,CAAC;AAAA,2FACX,IAAI,EAAE,QAAQ,CAAC;AAAA,gEAC1C,IAAI,EAAE,QAAQ,CAAC;AAAA;AAAA,UAGnE,EACN;AAAA;AAAA,MAGA,IAAI,UACA;AAAA;AAAA;AAAA,UAGA,IAAI,EAAE,SAAS,CAAC;AAAA;AAAA;AAAA,UAGhB,IAAI,OAAO;AAAA;AAAA,QAGb,IAAI,cAAc,OACd;AAAA;AAAA,UAEF,IAAI,cAAc,IAAI;AAAA;AAAA,UAGpB,EACN;AAAA;AAAA,yFAEmF,IAAI,EAAE,MAAM,CAAC;AAAA,2FACX,IAAI,EAAE,QAAQ,CAAC;AAAA,gEAC1C,IAAI,EAAE,QAAQ,CAAC;AAAA;AAAA;AAAA,QAIrE,EACN;AAAA;AAEJ;AC5DA,MAAA,kBAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKtB,IAAI,QAAQ;AAAA;AAAA;AAAA;AAAA;ACL/B,MAAA,qBAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CACb,QACG,4BAA4B,IAAI,EAAE;AAAA,IACnC,IAAI,OAAO,IAAI,CAAC,UAAkB,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC;AAAA;ACH1D,MAAA,iBAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AAEvC,QAAM,QAAQ,IAAI;AASlB,QAAM,IAAI,IAAI;AACd,QAAMF,aAAY,IAAI;AACtB,QAAM,YAAY,IAAI;AAEtB,QAAM,aAAa,MAAM,eACtB,IAAI,CAAC,iBAAyB;AACvB,UAAAG,aAAY,MAAM,WAAW,YAAY;AACxC,WAAA;AAAA,oBACO,IAAI,QAAQ;AAAA,kBACdA,WAAU,GAAG;AAAA,mBACZA,WAAU,OAAO,IAAI;AAAA;AAAA;AAAA,QAGhCA,WAAU,OAAO,aAAaH,WAAUG,WAAU,IAAI,CAAC,sCAAsC,EAAE;AAAA,QAC/F,EAAEA,WAAU,KAAK,CAAC;AAAA;AAAA,EAAA,CAErB,EACA,KAAK,EAAE;AAEH,SAAA,4FAA4F,IAAI,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAOjF,IAAI,QAAQ;AAAA,yBACnB,IAAI,OAAO;AAAA;AAAA;AAAA,YAGxB,EAAE,MAAM,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAOa,MAAM,UAAU,QAAQ,EAAE;AAAA,sBAC3C,IAAI,OAAO;AAAA,sBACX,MAAM,OAAO;AAAA,kBACjB,IAAI,QAAQ;AAAA;AAAA;AAAA,iCAGG,IAAI,QAAQ;AAAA,UACnC,UAAU;AAAA,UACV,UAAU,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA;AAI5B;AC5DA,MAAA,sBAAe,EAAE,MAAMD,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AAEvC,QAAM,QAAQ,IAAI;AAClB,QAAM,OAAO,IAAI;AACjB,QAAM,IAAI,IAAI;AACd,QAAMF,aAAY,IAAI;AACtB,QAAM,UAAU,IAAI;AACpB,QAAMD,QAAO,IAAI;AAEjB,QAAM,kBAAkB,MACrB;AAAA,IACC,CAAC,MAAM,cAAsB;AAAA,sBACb,KAAK,KAAK,YAAY,cAAc,KAAK,OAAO,mBAAmB,SAAS,sCAAsC,KAAK,KAAK;AAAA;AAAA;AAAA,EAAA,EAI7I,KAAK,EAAE;AACH,SAAA;AAAA;AAAA,QAED,OAAO;AAAA;AAAA;AAAA;AAAA,UAIL,eAAe;AAAA,sBACH,EAAE,aAAa,CAAC,+DAA+DC,WAAU,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC;AAAA;AAAA;AAAA,UAG/HD,KAAI;AAAA;AAAA;AAAA;AAId;AC/BA,MAAA,gBAAe,EAAE,MAAMG,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AAEvC,QAAME,SAAQ,IAAI;AAMlB,QAAMD,aAAY,IAAI;AAOtB,QAAM,YAAY,IAAI;AACtB,QAAMH,aAAY,IAAI;AAEhB,QAAA,QAAQ,OAAO,QAAQI,OAAM,QAAQ,CAAE,CAAA,EAC1C,IAAI,CAAC,CAAC,MAAMF,MAAK,MAAM,GAAG,IAAI,KAAKA,MAAK,GAAG,EAC3C,KAAK,GAAG;AACJ,SAAA,IAAIE,OAAM,IAAI;AAAA;AAAA,uBAEA,UAAU,SAASD,WAAU,KAAK,CAAC,IAAIA,WAAU,eAAe,EAAE;AAAA,MACnF,KAAK;AAAA;AAAA,IAEPA,WAAU,WAAW,aAAaA,WAAU,QAAQ,iBAAiB,EAAE;AAAA,IACvEC,OAAM,WAAW,EAAE;AAAA,IACnBD,WAAU,UAAU,2BAA2BH,WAAU,eAAe,CAAC,+BAA+BG,WAAU,OAAO,WAAW,EAAE;AAAA,IACtIA,WAAU,YAAY,mBAAmBA,WAAU,SAAS,WAAW,EAAE;AAAA,MACvEC,OAAM,IAAI;AAAA;AAAA;AAAA;AAIhB;AClCA,MAAe,SAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACDA,MAAA,SAAe,EAAE,MAAMF,SAAA,MAAOD,OAAK;ACDnC,MAAe,UAAA,CAAC,QAAyB;AAEvC,QAAMG,SAAQ,IAAI;AAOlB,QAAMD,aAAY,IAAI;AACtB,QAAM,OAAO,IAAI;AACjB,QAAMH,aAAY,IAAI;AAEhB,QAAA,QAAQ,OAAO,QAAQI,OAAM,QAAQ,CAAE,CAAA,EAC1C,IAAI,CAAC,CAAC,MAAMF,MAAK,MAAM,GAAG,IAAI,KAAKA,MAAK,GAAG,EAC3C,KAAK,GAAG;AACJ,SAAA;AAAA,OACFE,OAAM,IAAI;AAAA;AAAA,YAEL,IAAI,EAAE;AAAA,QACV,KAAK;AAAA,QACL,IAAI,UAAU,iBAAiB,EAAE;AAAA;AAAA,QAEjCA,OAAM,IAAI;AAAA,oBACEA,OAAM,cAAc,EAAE,UAAU,IAAI,EAAE;AAAA,QAClDA,OAAM,WAAW,EAAE;AAAA,QACnB,CAAC,KAAK,cAAc,IAAI,SAASA,OAAM,SAAS,EAAE,YAAY,EAAE;AAAA;AAAA,MAElED,WAAU,UAAU,2BAA2BH,WAAU,eAAe,CAAC,8BAA8BG,WAAU,OAAO,WAAW,EAAE;AAAA;AAE3I;AC9BA,MAAe,SAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACDA,MAAA,WAAe,EAAE,MAAMD,SAAA,MAAOD,OAAK;ACDnC,MAAe,UAAA,CACb,QACG;AAAA,IACA,IAAI,UAAU,QACd;AAAA,EACC,CAAC,QAAQ,UAAkB;AAAA,kBACf,IAAI,UAAU,WAAW,OAAO,KAAK,CAAC,sBAAsB,IAAI,SAAS;AAAA,QACnF,IAAI,iBAAiB,KAAK,CAAC;AAAA;AAAA;AAG/B,EACC,KAAK,EAAE,CAAC;AAAA;ACXb,MAAA,UAAe,EAAE,MAAMC,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AACvC,SAAO,YAAY,IAAI,EAAE,kBAAkB,IAAI,OAAO,IAAI,IAAI,SAAS,WAAW,IAAI,MAAM,MAAM,EAAE;AAAA,MAEhG,IAAI,UACA;AAAA,MACJ,IAAI,QAAQ;AAAA;AAAA,QAGR,EACN;AAAA;AAEJ;ACXA,MAAA,YAAe,EAAE,MAAMA,QAAM;ACF7B,MAAe,aAAA;AAAA,EACb,aAAa;AAAA,EACb,cAAc;AAAA,EACd,2BAA2B;AAAA,EAC3B,0BAA0B;AAAA,EAC1B,oCAAoC;AACtC;ACJA,MAAe,UAAA,CAAC,QAAyB;AAEvC,QAAMC,aAAY,IAAI;AAStB,QAAME,WAAU,IAAI;AAOpB,QAAM,OAAO,IAAI;AACjB,QAAM,IAAI,IAAI;AACd,QAAML,aAAY,IAAI;AACtB,QAAM,cAAc,IAAI;AAClB,QAAA,eAAe,CAAC,CAAC,IAAI;AACrB,QAAA,kBAAkB,CAAC,CAAC,IAAI;AACxB,QAAA,YAAY,CAAC,CAAC,IAAI;AAClB,QAAA,iBAAiB,CAAC,CAAC,IAAI;AAC7B,QAAM,oBAAoB,IAAI;AAC9B,QAAM,YAAY,IAAI;AAChB,QAAA,aAAa,OAAO,IAAI,UAAU;AAElC,QAAA,aAAaG,WAAU,cACzB,iCACA;AACJ,QAAM,SAAS,YACX;AAAA;AAAA;AAAA,UAGIA,WAAU,UAAU,cAAc,EAAE;AAAA,UACpCE,SACC;AAAA,IACC,CAAC,QAAQ;AAAA,uBACE,IAAI,YAAY,IAAI,SAAS,WAAW,mBAAmB,EAAE;AAAA,cACtE,IAAI,YAAY,KAAK,EAAE,IAAI,SAAS,IAAI,SAAS,EAAE,CAAC;AAAA,cACpD,IAAI,UAAU,iCAAiC,IAAI,OAAO,YAAYL,WAAU,eAAe,CAAC,8BAA8B,IAAI,OAAO,WAAW,EAAE;AAAA;AAAA;AAAA,EAAA,EAIzJ,KAAK,EAAE,CAAC;AAAA,UAET,iBACI;AAAA,YACF,gBAAgB,sBAAsB,WAAW,YAAY,EAAE;AAAA,iBAE7D,EACN;AAAA;AAAA;AAAA,MAIF;AAEJ,QAAM,OAAO,KACV;AAAA,IACC,CAAC,QAAQ;AAAA,UACL,GAAG;AAAA;AAAA,EAAA,EAGR,KAAK,EAAE;AAEJ,QAAA,SACJ,gBAAgB,kBACZ;AAAA;AAAA;AAAA,uBAGe,aAAa,CAAC;AAAA,mDACc,WAAW;AAAA,wBACtCA,WAAU,MAAM,CAAC,UAAU,EAAEG,WAAU,cAAc,aAAa,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,MAMnF;AAEC,SAAA;AAAA,MACHA,WAAU,UAAU,YAAY,EAAE;AAAA,MAClCA,WAAU,WAAW,WAAW,EAAE;AAAA,MAClCA,WAAU,QAAQ,eAAe,EAAE;AAAA,MACnCA,WAAU,YAAY,YAAY,QAAQ;AAAA,QACxC,UAAU;AAAA,MACZ,MAAM;AAAA,kBACM,WAAW;AAAA,QACrB,IAAI;AAAA;AAAA,MAEN,MAAM;AAAA;AAEZ;AC/FA,MAAe,SAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACDA,MAAA,WAAe,EAAE,MAAMD,SAAA,MAAOD,OAAK;ACDnC,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAME,aAAY,IAAI;AACtB,QAAM,IAAI,IAAI;AACP,SAAA;AAAA,MAEH,IAAI,YAAY,IAAI,UAChB;AAAA;AAAA,sBAEYA,WAAU,GAAG,kBAAkB,EAAE,KAAK,CAAC;AAAA,UACnD,IAAI,GAAG;AAAA;AAAA,QAGP,EACN;AAAA,MAEE,IAAI,YACA;AAAA;AAAA,sBAEYA,WAAU,GAAG,oBAAoB,EAAE,OAAO,CAAC;AAAA,UACvD,IAAI,KAAK;AAAA;AAAA,QAGT,EACN;AAAA,MAEE,CAAC,IAAI,YAAY,IAAI,UACjB;AAAA;AAAA,sBAEYA,WAAU,GAAG,kBAAkB,EAAE,KAAK,CAAC;AAAA,UACnD,IAAI,GAAG;AAAA;AAAA,QAGP,EACN;AAAA,MAEE,IAAI,WACA;AAAA;AAAA,sBAEYA,WAAU,GAAG,mBAAmB,EAAE,MAAM,CAAC;AAAA,UACrD,IAAI,IAAI;AAAA;AAAA,QAGR,EACN;AAAA;AAEJ;AC7CA,MAAA,MAAe,EAAE,MAAMD,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAM,IAAI,IAAI;AACd,QAAM,MAAM,IAAI;AAMhB,QAAM,WAAW,IAAI;AACf,QAAA,WAAW,CAAC,CAAC,IAAI;AACvB,QAAMC,aAAY,IAAI;AACtB,QAAM,OAAO,IAAI;AACjB,QAAM,SAAS,IAAI;AACnB,QAAM,UAAU,IAAI;AACpB,QAAMH,aAAY,IAAI;AACtB,QAAM,aAAa,IAAI;AAEvB,QAAM,WAAW,KACd;AAAA,IACC,CAAC,KAAK,aAAa;AAAA,6BACI,IAAI,GAAG;AAAA,QAC5B,GAAG;AAAA,QAEH,SAAS,QAAQ,KAAK,CAAC,WACnB;AAAA;AAAA,mDAEuC,IAAI,OAAO,KAAK,EAAEG,WAAU,WAAW,MAAM,CAAC;AAAA,YACrFA,WAAU,YAAY,4CAA4C,IAAI,SAAS,KAAK,EAAEA,WAAU,aAAa,QAAQ,CAAC,cAAc,EAAE;AAAA;AAAA,UAGtI,EACN;AAAA;AAAA;AAAA,YAGM,IAAI,OAAO,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA,EAM3B,KAAK,EAAE;AAEJ,QAAA,SAAS,IAAI,SACf;AAAA;AAAA,QAEE,IAAI,MAAM;AAAA;AAAA,MAGZ;AAEJ,QAAM,YACJ,CAAC,YAAY,IAAI,eACb;AAAA,6CACqC,IAAI,MAAM;AAAA,kBACrCH,WAAU,MAAM,CAAC,UAAU,cAAc,EAAE,aAAa,CAAC;AAAA;AAAA,MAGnE;AAEC,SAAA;AAAA,MACH,SAAS,uCAAuC,MAAM,WAAW,EAAE;AAAA,MACnE,QAAQ;AAAA,MACR,MAAM;AAAA;AAAA,IAER,SAAS;AAAA,IACT,UAAU,yCAAyC,OAAO,WAAW,EAAE;AAC3E;AClEA,MAAe,SAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACDA,MAAA,WAAe,EAAE,MAAME,SAAA,MAAOD,OAAK;ACDnC,MAAe,UAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACFA,MAAe,QAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACDA,MAAA,QAAe,EAAE,MAAMC,SAAO,MAAM;ACDpC,MAAe,UAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACFA,MAAA,WAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACFA,MAAA,OAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAMI,QAAO,IAAI;AACjB,QAAMN,aAAY,IAAI;AACf,SAAA,aAAaA,WAAUM,KAAI,CAAC;AACrC;ACJA,MAAA,OAAe,EAAE,MAAMJ,QAAM;ACF7B,MAAA,YAAe,CAAC,SAAS,MAAM,aAAa;AAC1C,QAAM,QAAQ;AAAA,IACZ,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,WAAW;AAAA,IACX,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AACA,MAAI,OAAO,UAAU,eAAe,KAAK,OAAO,IAAI,GAAG;AACrD,WAAO,MAAM,IAAI;AAAA,EAAA;AAEnB,SAAO,QAAQ;AACR,SAAA,KAAK,QAAQ,MAAM,GAAG;AACtB,SAAA,KAAK,QAAQ,OAAO,UAAU;AACrC,SAAO,WAAW,QAAQ,IAAI,aAAa,QAAQ,IAAI;AACzD;AChBA,MAAe,UAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACFA,MAAe,SAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACDA,MAAA,QAAe,EAAE,MAAMA,SAAA,MAAOD,OAAK;ACDnC,MAAe,UAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACHA,MAAA,QAAe,EAAE,MAAMC,QAAM;ACC7B,SAAA,QAAyB,MAAuB;AACvC,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMT;ACPA,MAAA,SAAe,EAAE,MAAMA,QAAM;ACA7B,SAAA,QAAyB,MAAuB;AACvC,SAAA;AACT;ACFA,MAAA,UAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CACb,QACG,2CAA2C,IAAI,KAAK;AAAA,IACrD,IAAI,OAAO;AAAA;AAAA;ACHf,MAAA,UAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACFA,MAAA,gBAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACFA,MAAA,kBAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACFA,MAAA,QAAe,EAAE,MAAMA,QAAM;ACM7B,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAME,SAAQ,IAAI;AAClB,QAAM,WAAW,IAAI;AACrB,SAAO,sBAAsB,IAAI,SAAS,WAAW,SAAS;AAAA,MAE1D,MAAM,QAAQ,IAAI,MAAM,IACpB,IAAI,OACD;AAAA,IACC,CAAC,SAAoB;A9DdnC;A8DcmC;AAAA;AAAA,2BAEV,KAAAA,UAAA,gBAAAA,OAAO,SAAP,mBAAa,UAAS,UAAU,UAAU,EAAE;AAAA,aACxDA,UAAA,gBAAAA,OAAO,IAAI;AAAA;AAAA,cAEV,OAAO,SAAQA,UAAA,gBAAAA,OAAO,SAAQ,CAAA,CAAE,EAC/B,IAAI,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,KAAK,GAAG,GAAG,EACvC,KAAK,GAAG,CAAC;AAAA,qBACH,KAAK,KAAK;AAAA,cACjB,IAAI,UAAU,KAAK,SAAU,OAAO,IAAI,UAAU,YAAY,IAAI,SAAS,OAAO,UAAU,eAAe,KAAK,IAAI,OAAO,KAAK,KAAK,KAAK,IAAI,MAAM,KAAK,KAAK,IAAK,YAAY,EAAE;AAAA,cACjL,KAAK,WAAW,aAAa,EAAE;AAAA,mBAC3B,0CAAU,SAAV,mBAAgB,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK;AAAA;AAAA,kCAEtC,0CAAU,SAAV,mBAAgB,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK;AAAA,oBAClE,IAAI,IAAK,IAAI,EAA4B,KAAK,KAAK,IAAI,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA,EAMxE,KAAK,EAAE,IACV,EACN;AAAA;AAEJ;ACjCA,MAAe,SAAA,CAAC,QAAyB;AACvC,QAAM,WAAW,MAAM,QAAQ,IAAI,MAAM,IACrC,IAAI,OACD;AAAA,IACC,CAAC,SACC,IAAI,UAAU,KAAK,SAClB,OAAO,IAAI,UAAU,YACpB,IAAI,SACJ,OAAO,UAAU,eAAe,KAAK,IAAI,OAAO,KAAK,KAAK,KAC1D,IAAI,MAAM,KAAK,KAAK;AAAA,EAAA,EAEzB;AAAA,IAAI,CAAC,SACJ,IAAI,IAAK,IAAI,EAA4B,KAAK,KAAK,IAAI,KAAK;AAAA,EAAA,EAE7D,KAAK,IAAI,IACZ;AACG,SAAA;AAAA,MACH,QAAQ;AAAA;AAEd;ACvBA,MAAA,QAAe,EAAE,MAAMF,SAAA,MAAOD,OAAK;ACDnC,SAAA,QAAyB,KAAsB;AAC7C,QAAM,IAAI,IAAI;AACd,QAAMD,aAAY,IAAI;AACtB,QAAMG,aAAY,IAAI;AACf,SAAA;AAAA;AAAA;AAAA;AAAA,YAIG,IAAI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAMCH,WAAU,MAAM,CAAC;AAAA,cAC3B,EAAEG,WAAU,oBAAoB,cAAc,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO7D;ACtBA,MAAA,cAAe,EAAE,MAAMD,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAME,SAAQ,IAAI;AAKlB,QAAM,WAAW,IAAI;AACrB,QAAMD,aAAY,IAAI;AAChB,QAAA,eAAcC,UAAA,gBAAAA,OAAO,SAAQ,CAAC;AACpC,QAAM,WACJ,CAAC,YAAY,OAAM,qCAAU,QAAMD,cAAA,gBAAAA,WAAW,OAC1C,OAAO,SAAS,EAAE,IAAIA,WAAU,GAAG,MACnC;AACN,QAAM,mBAAmB,OAAO,QAAQ,WAAW,EAChD,IAAI,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,KAAK,GAAG,GAAG,EACvC,KAAK,GAAG;AACX,QAAM,eAAe,YAAY,eAC7B,iBAAiB,YAAY,YAAY,MACzC;AACG,SAAA;AAAA,YACEC,UAAA,gBAAAA,OAAO,OAAMA,OAAM,MAAM,iBAAiB;AAAA;AAAA,OAE/CA,UAAA,gBAAAA,OAAO,YAAW,aAAa,EAAE;AAAA,MACjC,gBAAgB;AAAA,MAChB,QAAQ;AAAA,KACT,IAAI,aAAa;AAAA;AAAA;AAAA;AAAA,WAIX,YAAY;AAAA;AAAA;AAGvB;AChCA,MAAe,SAAA,CAAC,QAAyB;AACvC,QAAM,OAAO,IAAI;AACjB,QAAMF,SAAQ,IAAI,QAAQ,KAAK,qBAAqB,IAAI,KAAK,IAAI;AACjE,SAAO,oBAAoBA,MAAK;AAClC;ACHA,MAAA,SAAe,EAAE,MAAMA,SAAA,MAAOD,OAAK;ACDnC,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAM,QAAQ,IAAI;AAClB,QAAM,SAAS,IAAI;AACb,QAAA,aAAa,OAAO,QAAQ,SAAS,CAAA,CAAE,EAC1C,IAAI,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,KAAK,GAAG,GAAG,EACvC,KAAK,GAAG;AACL,QAAA,WAAW,IAAI,WAAW,wBAAwB;AACxD,SAAO,WAAW,QAAQ,WAAW,OAAO,KAAK,KAAK,UAAU;AAAA,MAC5D,IAAI,IAAK,IAAI,EAA4B,OAAO,KAAK,IAAI,OAAO,KAAK;AAAA;AAE3E;ACVA,MAAe,SAAA,CAAC,QAAyB;AACvC,QAAM,SAAS,IAAI;AACb,QAAAM,SAAQ,IAAI,WACd,IAAI,IACD,IAAI,EAA4B,OAAO,KAAK,IAC7C,OAAO,QACT;AACJ,SAAO,GAAGA,MAAK;AACjB;ACPA,MAAA,eAAe,EAAE,MAAML,SAAA,MAAOD,OAAK;ACDnC,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAME,aAAY,IAAI;AAMtB,QAAMH,aAAY,IAAI;AACtB,QAAM,IAAI,IAAI;AACR,QAAA,WAAW,IAAI,WACjB;AAAA,oBACcA,WAAU,UAAU,CAAC;AAAA,iBAEnC;AACE,QAAA,SAASG,WAAU,SACrB;AAAA,UACI,EAAEA,WAAU,MAAM,CAAC;AAAA,gBAEvB;AACG,SAAA,GAAG,IAAI,OAAO;AAAA;AAAA;AAAA,kBAGLA,WAAU,KAAK,YAAYA,WAAU,MAAM;AAAA,cAC/CA,WAAU,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA,gBAIrBH,WAAU,SAAS,CAAC;AAAA;AAAA,iDAEaG,WAAU,MAAM;AAAA,IAC7D,QAAQ;AAAA;AAAA;AAAA,EAGV,MAAM;AACR;AClCA,MAAe,SAAA,CACb,SACG;AAAA;ACDL,MAAA,YAAe,EAAE,MAAMD,SAAA,MAAOD,OAAK;ACEnC,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAME,aAAY,IAAI;AAItB,QAAM,IAAI,IAAI;AACd,QAAM,OAAO,IAAI;AACV,SAAA;AAAA;AAAA;AAAA;AAAA,UAICA,WAAU,OAAO,IAAI,CAACD,WAAU,mCAAmC,EAAEA,OAAM,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,QAIpGC,WAAU,UACT;AAAA,IACC,CAAC,aAAa;AAAA;AAAA,gBAER,EAAE,SAAS,KAAK,CAAC;AAAA,YACrBA,WAAU,OACT;AAAA,MACC,CAACD,WAAU;AAAA;AAAA,0CAEiB,KAAK,aAAa,QAAQ,CAAC,YAAYA,OAAM,KAAK,SAAS,IAAI,GAAG,IAAI,SAAS,KAAK,IAAIA,OAAM,KAAK;AAAA;AAAA;AAAA,IAAA,EAIhI,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA,EAAA,EAIZ,KAAK,EAAE,CAAC;AAAA;AAAA;AAGjB;ACnCA,MAAe,OAAA,CAAC,QAAyB;AACvC,QAAMC,aAAY,IAAI;AAItB,QAAM,IAAI,IAAI;AACd,QAAMD,SAAQ,IAAI;AACX,SAAA;AAAA;AAAA,QAEDC,WAAU,UACT;AAAA,IACC,CAAC,aAAa;AAAA;AAAA,gBAER,EAAE,SAAS,KAAK,CAAC;AAAA;AAAA,cAEnBA,WAAU,OACT;AAAA,MAAI,CAAC,SACJD,UACA,OAAO,UAAU,eAAe,KAAKA,QAAO,SAAS,KAAK,KAC1DA,OAAM,SAAS,KAAK,MAAM,KAAK,QAC3B,EAAE,KAAK,KAAK,IACZ;AAAA,IAAA,EAEL,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,EAAA,EAKd,KAAK,EAAE,CAAC;AAAA;AAAA;AAGjB;ACjCA,MAAA,SAAe,EAAE,MAAMA,SAAO,KAAK;ACCnC,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAMC,aAAY,IAAI;AAItB,QAAM,IAAI,IAAI;AACR,QAAA,WAAWA,WAAU,WACxB;AAAA,IACC,CAACK,MAAK,UACJ,iBAAiB,IAAI,eAAe,QAAQ,YAAY,EAAE,8BAA8B,IAAI,UAAU,KAAK,EAAEA,KAAI,KAAK,CAAC;AAAA,EAAA,EAE1H,KAAK,EAAE;AACJ,QAAA,YAAYL,WAAU,WACzB;AAAA,IACC,CAACK,MAAK,UACJ,6DAA6D,IAAI,eAAe,QAAQ,YAAY,EAAE,UAAU,IAAI,MAAM,KAAK,IAAI,cAAc,KAAK,CAAC;AAAA,EAAA,EAE1J,KAAK,EAAE;AACV,SAAO,4BAA4BL,WAAU,iBAAiB,mBAAmB,EAAE;AAAA,8CACvCA,WAAU,iBAAiB,uBAAuB,EAAE;AAAA,QAC1F,QAAQ;AAAA;AAAA,MAEV,SAAS;AAAA;AAEf;ACxBA,MAAe,OAAA,CAAC,QAAyB;AACvC,QAAMA,aAAY,IAAI;AACtB,QAAM,IAAI,IAAI;AACd,SAAOA,WAAU,WACd;AAAA,IACC,CAACK,MAAK,UAAU;AAAA,mDAC6B,EAAEA,KAAI,KAAK,CAAC;AAAA;AAAA,YAEnD,IAAI,cAAc,KAAK,CAAC;AAAA;AAAA;AAAA,EAAA,EAI/B,KAAK,EAAE;AACZ;ACdA,MAAA,MAAe,EAAE,MAAMN,SAAO,KAAK;ACDnC,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAMC,aAAY,IAAI;AAOtB,QAAM,IAAI,IAAI;AACd,QAAM,kBAAkB,IAAI;AAC5B,QAAM,gBAAgB,IAAI;AAC1B,QAAM,WAAW,IAAI;AACrB,QAAM,WAAW,IAAI;AACrB,QAAM,KAAK,IAAI;AAET,QAAA,aACJA,WAAU,UAAUA,WAAU,OAAO,SAAS,IAC1C,cAAcA,WAAU,OAAO,IAAI,CAAC,WAAW,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,kBAChF;AAEN,QAAM,WAAW,gBACd;AAAA,IACC,CAAC,KAAK,YACJ,gBAAgB,EAAE;AAAA,UAChB,IACC;AAAA,MACC,CAAC,QAAQ,YACP,YAAY,QAAQ,IAAI,QAAQ,IAAI,gBAAgB,WAAW,aAAa,MAAM,EAAE,IAAI,MAAM;AAAA,IAAA,EAEjG,KAAK,EAAE,CAAC;AAAA;AAAA,EAAA,EAGd,KAAK,EAAE;AAEH,SAAA;AAAA,MACHA,WAAU,UAAU,YAAY,EAAE;AAAA,MAClCA,WAAU,WAAW,WAAW,EAAE;AAAA,MAClCA,WAAU,QAAQ,eAAe,EAAE;AAAA,MACnCA,WAAU,YAAY,YAAY,QAAQ;AAAA;AAAA,IAE5C,UAAU;AAAA;AAAA,MAER,QAAQ;AAAA;AAAA;AAGd;AC7CA,MAAA,QAAe,EAAE,MAAMD,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAM,OAAO,IAAI;AACjB,QAAM,UAAU,IAAI;AACpB,QAAM,aAAa,IAAI;AACvB,MAAID,QAAO;AACX,MAAI,KAAK,QAAQ;AACP,IAAAA,SAAA;AAAA;AAAA,EAAA,OAEH;AACG,IAAAA,SAAA;AAAA,EAAA;AAEV,MAAI,SAAS;AACH,IAAAA,SAAA;AAAA,QACJ,OAAO;AAAA;AAAA,EAAA;AAGT,MAAA,cAAc,WAAW,QAAQ;AAC3B,IAAAA,SAAA;AAAA,QACJ,WAAW,KAAK,EAAE,CAAC;AAAA;AAAA,EAAA;AAGzB,MAAI,KAAK,QAAQ;AACP,IAAAA,SAAA;AAAA,EAAA,OACH;AACG,IAAAA,SAAA;AAAA,EAAA;AAEH,SAAAA;AACT;AC3BA,MAAA,OAAe,EAAE,MAAMC,QAAM;ACA7B,MAAe,OAAA,CAAC,QAAyB;AACvC,QAAM,IAAI,IAAI;AACd,QAAM,WAAW,IAAI;AACrB,QAAM,WAAW,IAAI;AACf,QAAA,UAAU,CAAC,WACb;AAAA,yEACmE,EAAE,MAAM,CAAC;AAAA,8EACJ,EAAE,QAAQ,CAAC;AAAA,gBAEnF;AACG,SAAA;AAAA,0BACiB,QAAQ;AAAA,MAC5B,OAAO;AAAA;AAEb;ACdA,MAAe,OAAA,CAAC,QAAyB;AACvC,QAAM,IAAI,IAAI;AACd,QAAM,SAAS,IAAI;AACnB,QAAM,OAAO,IAAI;AAKjB,QAAM,WAAW,IAAI;AACrB,MAAI,UAAU;AACd,MAAI,KAAK,aAAa;AACpB,eAAW,yDAAyD,EAAE,KAAK,YAAY,WAAW,UAAU,CAAC;AAAA,EAAA;AAE/G,MAAI,CAAC,UAAU;AACF,eAAA,6DAA6D,EAAE,KAAK,CAAC;AACrE,eAAA,qDAAqD,EAAE,MAAM,CAAC;AAC9D,eAAA,kEAAkE,EAAE,QAAQ,CAAC;AACxF,QAAI,KAAK,iBAAiB;AACb,iBAAA,wFAAwF,EAAE,QAAQ,CAAC;AAAA,IAAA;AAAA,EAChH;AAEK,SAAA;AAAA;AAAA,QAED,OAAO,IAAI,CAACA,WAAU,gCAAgCA,MAAK,QAAQ,EAAE,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA,YAGzE,OAAO;AAAA;AAAA;AAAA;AAAA;AAKnB;AC9BA,MAAe,eAAA;AAAA,EACb,UAAU;AAAA,IACR,MAAM;AAAA,EACR;AAAA,EACA,UAAU;AAAA,IACR,MAAM;AAAA,EAAA;AAEV;ACRA,MAAA,UAAe,CACb,QACG,eAAe,IAAI,OAAO,sCAAsC,IAAI,QAAQ;AAAA;ACFjF,MAAA,UAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AAAA,8BACX,IAAI,SAAS;AAAA,MACrC,IAAI,QAAQ;AAAA;AAAA;AAAA;ACFlB,MAAA,OAAe,EAAE,MAAMA,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAM,YAAY,IAAI;AACtB,QAAM,mBAAmB,IAAI;AAC7B,QAAMO,gBAAe,IAAI;AACzB,QAAM,YAAY,IAAI;AACtB,QAAM,aAAa,IAAI;AACvB,QAAMC,aAAY,IAAI;AACtB,MAAI,UAAU;AACd,MAAI,qBAAqB,wBAAwB;AACrC,cAAA;AAAA;AAAA;AAAA,YAGFD,aAAY;AAAA;AAAA;AAAA,4GAGoF,SAAS;AAAA,YACzG,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMVC,UAAS;AAAA;AAAA;AAAA;AAAA,EAAA,OAIZ;AACK,cAAA;AAAA,QACND,aAAY;AAAA,sCACkB,SAAS;AAAA,UACrC,UAAU;AAAA;AAAA,QAEZC,UAAS;AAAA;AAAA,EAAA;AAGf,SAAO,eAAe,SAAS;AAAA;AAAA,QAEzB,OAAO;AAAA;AAAA;AAGf;ACxCA,MAAA,SAAe,EAAE,MAAMR,QAAM;ACA7B,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAM,YAAY,IAAI;AACtB,QAAM,SAAS,IAAI;AACnB,QAAM,cAAc,IAAI;AACxB,QAAM,oBAAoB,IAAI;AAC9B,QAAMF,aAAY,IAAI;AACtB,QAAM,QAAQ,OACX,IAAI,CAACW,QAAO,UAAU;AACrB,UAAM,UACJA,OAAM,WAAW,gBAAgB,QAC7B,uBAAuB,iBAAiB;AAAA,wBAC5BX,WAAU,eAAe,CAAC;AAAA,qBAEtC;AACN,WAAO,aAAa,gBAAgB,QAAQ,YAAY,EAAE,eAAe,SAAS;AAAA;AAAA;AAAA,cAG1EW,OAAM,KAAK;AAAA,cACX,OAAO;AAAA;AAAA;AAAA;AAAA,EAAA,CAIhB,EACA,KAAK,EAAE;AACH,SAAA,oCAAoC,SAAS,iBAAiB,SAAS;AAAA;AAAA,QAExE,KAAK;AAAA;AAAA;AAGb;AC9BA,MAAA,eAAe,EAAE,MAAMT,QAAM;ACC7B,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAM,YAAY,IAAI;AACtB,QAAM,SAAS,IAAI;AACnB,QAAM,cAAc,IAAI;AACxB,QAAM,IAAI,IAAI;AACd,QAAM,YAAY,OACf,IAAI,CAACS,QAAO,UAAU;AACrB,UAAM,WACJ,OAAO,SAAS,IACZ,iIACA;AACC,WAAA;AAAA,YACD,cAAc,QAAQ,cAAc,EAAE;AAAA,YACtC,gBAAgB,QAAQ,YAAY,EAAE;AAAA,YACtC,cAAc,QAAQ,cAAc,EAAE;AAAA,yEACuB,EAAEA,OAAM,OAAO,EAAE,YAAY,KAAA,CAAM,CAAC;AAAA,UACnG,QAAQ;AAAA,qBACG,SAAS;AAAA;AAAA,EAAA,CAEzB,EACA,KAAK,EAAE;AACV,SAAO,oCAAoC,SAAS;AAAA;AAAA,QAE9C,SAAS;AAAA;AAAA;AAGjB;AC3BA,MAAA,sBAAe,EAAE,MAAMT,QAAM;ACG7B,MAAe,UAAA,CAAC,QAAyB;AACjC,QAAA,SAAU,IAAI,OAAmB;AAAA,IACrC,CAACS,QAAO,UAAkB;AAAA,+BACC,IAAI,gBAAgB,QAAQ,YAAY,EAAE;AAAA,qCACpC,IAAI,SAAS;AAAA,UACvC,IAAI,EAA4DA,OAAM,OAAO,EAAE,YAAY,MAAM,CAAC;AAAA,UAEnGA,OAAM,WAAW,IAAI,gBAAgB,QACjC,WAAW,IAAI,SAAS,oBAAqB,IAAI,UAAuC,eAAe,CAAC,8BAA8BA,OAAM,OAAO,WACnJ,EACN;AAAA;AAAA;AAAA;AAAA,EAIN;AACO,SAAA,oCAAoC,IAAI,SAAS;AAAA;AAAA,MAEpD,OAAO,KAAK,EAAE,CAAC;AAAA;AAAA;AAGrB;ACvBA,MAAA,uBAAe,EAAE,MAAMT,QAAM;ACC7B,MAAe,UAAA,CAAC,QAAyB;AACvC,QAAM,UAAU,IAAI;AAMpB,QAAM,YAAY,IAAI;AACtB,QAAM,IAAI,IAAI;AACR,QAAA,eAAe,QAAQ,SACzB;AAAA,qEAC+D,SAAS,YAAY,EAAE,QAAQ,CAAC;AAAA,YAE/F;AACE,QAAA,iBAAiB,QAAQ,WAC3B;AAAA,qEAC+D,SAAS,cAAc,EAAE,UAAU,CAAC;AAAA,YAEnG;AACE,QAAA,aAAa,QAAQ,OACvB;AAAA,iEAC2D,SAAS,UAAU,EAAE,MAAM,CAAC;AAAA,YAEvF;AACE,QAAA,eAAe,QAAQ,SACzB;AAAA,mEAC6D,SAAS,YAAY,EAAE,QAAQ,CAAC;AAAA,YAE7F;AACJ,SAAO,uCAAuC,SAAS;AAAA,IACrD,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,YAAY;AAAA;AAEhB;ACpCA,MAAA,YAAe,EAAE,MAAMA,QAAM;ACI7B,MAAe,OAAA,CAAC,QAA8B;AAC5C,MAAI,QAAQ;AACD,aAAA,QAAQ,IAAI,OAAO;AAC5B,QAAI,SAAS,SAAS;AACpB,eAAS,GAAG,IAAI,gBAAgB,IAAI,MAAM,IAAI,CAAC;AAAA,IAAA,OAC1C;AACL,eAAS,GAAG,IAAI,KAAK,IAAI,MAAM,IAAI,CAAC;AAAA,IAAA;AAAA,EACtC;AAEF,SAAO,QAAQ,MAAM,KAAA,CAAM,IAAI,IAAI,OAAO;AAC5C;ACbA,MAAe,QAAA,EAAE,KAAK;ACAtB,MAAe,QAAA,CAAC,SAA0B;AACjC,SAAA;AACT;ACFA,MAAA,aAAe,EAAE,MAAM,MAAM;AC+C7B,MAAe,YAAA;AAAA,EACb,UAAU,MAAM,MAAM;AACpB,QAAI,CAAC,MAAM;AACF,aAAA;AAAA,IAAA;AAET,UAAMG,WAAU;AAAA,MACd,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACN;AACA,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO,OAAO,UAAU,eAAe,KAAKA,UAAS,KAAK,SAAS,CAAC,IAChEA,SAAQ,KAAK,SAAA,CAAU,IACvB;AAAA,MACN,KAAK;AACI,eAAA,OAAO,UAAU,eAAe;AAAA,UACrC,KAAK;AAAA,UACL,KAAK,SAAS;AAAA,YAEZ,KAAK,WAAW,KAAK,SAAA,CAAU,IAC/B;AAAA,IAAA;AAED,WAAA;AAAA,EACT;AAAA,EACA,gBAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AAAA,EACH;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;ACtIA,MAAe,YAAA;AAAA,EACbO,SAAAA;AACF;ACFA,MAAM,UAAU;AAAA,EACd,WAAW;AAAA,EACX;AACF;AAOA,IAAI,OAAO,WAAW,aAAa;AAEjC,SAAO,UAAU;AACnB;"}